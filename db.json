{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-minima-1.1/source/css/dark.css","path":"css/dark.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-minima-1.1/source/css/custom.css","path":"css/custom.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-minima-1.1/source/css/normalize.css","path":"css/normalize.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-minima-1.1/source/css/prism-dark.css","path":"css/prism-dark.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-minima-1.1/source/css/skeleton.css","path":"css/skeleton.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-minima-1.1/source/css/prism-line-numbers.css","path":"css/prism-line-numbers.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-minima-1.1/source/images/favicon.png","path":"images/favicon.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-minima-1.1/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-minima-1.1/source/js/nanobar.min.js","path":"js/nanobar.min.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/hexo-theme-minima-1.1/.gitignore","hash":"824c6bad36ef799350c37bcd0fe5a1a88295d2f8","modified":1611679715862},{"_id":"themes/hexo-theme-minima-1.1/_config.yml","hash":"c4809bf454ffd8a4c933c33d5fdbfd236ba4a1ba","modified":1622243068949},{"_id":"themes/hexo-theme-minima-1.1/layout/archive.ejs","hash":"488cd341dad80be9c1492f726e64da587e3350a5","modified":1632605522593},{"_id":"themes/hexo-theme-minima-1.1/layout/index.ejs","hash":"b2d323d3593872e171cf084fed26fa42502682d7","modified":1632605526302},{"_id":"themes/hexo-theme-minima-1.1/layout/layout.ejs","hash":"7965d2f64937db64dd59241aab9775a11a2bcd9b","modified":1611779107012},{"_id":"themes/hexo-theme-minima-1.1/layout/page.ejs","hash":"13b0080d672c68efbc776b5c92d8348c22e89659","modified":1632605374667},{"_id":"themes/hexo-theme-minima-1.1/layout/post.ejs","hash":"9d5dc582ea7376c97680fa7014481fea559f33a6","modified":1642715244207},{"_id":"themes/hexo-theme-minima-1.1/layout/tag.ejs","hash":"232091666883917b5585cc87ae1d8c59af3d24ce","modified":1632605939814},{"_id":"themes/hexo-theme-minima-1.1/layout/partial/comments.ejs","hash":"0f804f4f3914e889917e3ce6bee78430a6ad9558","modified":1611779172771},{"_id":"themes/hexo-theme-minima-1.1/layout/partial/footer.ejs","hash":"02578e8fb61b0c4862c9a5ddde20459502c89228","modified":1622243754636},{"_id":"themes/hexo-theme-minima-1.1/layout/partial/pagination.ejs","hash":"42c710bf481242dc3c2f72fdcd5ab51473da1a50","modified":1611779143695},{"_id":"themes/hexo-theme-minima-1.1/layout/partial/header.ejs","hash":"59c786280f18ee7f52598fb1a7fd429fd3b66bd6","modified":1611779152164},{"_id":"themes/hexo-theme-minima-1.1/layout/partial/sidebar.ejs","hash":"e83b61ef129ee343161f720cbb74057dc72b0f35","modified":1611779134804},{"_id":"themes/hexo-theme-minima-1.1/source/css/dark.css","hash":"80cbe96cab94ba0e56a6d28ba4690adc6ab0dc09","modified":1611769160019},{"_id":"themes/hexo-theme-minima-1.1/source/css/custom.css","hash":"9954881c8b4fab040bf31be37e7e829e01053a1c","modified":1642715362942},{"_id":"themes/hexo-theme-minima-1.1/source/css/normalize.css","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1611679716263},{"_id":"themes/hexo-theme-minima-1.1/source/css/prism-dark.css","hash":"a863888f03eff55e3088942d80a8d887376be2fa","modified":1611679716279},{"_id":"themes/hexo-theme-minima-1.1/source/css/skeleton.css","hash":"dbe52bedd2154562fec1788579fdbe552c77240d","modified":1611776495583},{"_id":"themes/hexo-theme-minima-1.1/source/css/prism-line-numbers.css","hash":"a1692758d22c6cdf6fd1a8dafc9b4b98e41d3138","modified":1611679716310},{"_id":"themes/hexo-theme-minima-1.1/source/images/favicon.png","hash":"3595958d6ada49061864107b341c6f39b456079f","modified":1611686441184},{"_id":"themes/hexo-theme-minima-1.1/source/images/logo.png","hash":"e36010da438d83f70befc7815274166855a4a05f","modified":1611698095713},{"_id":"themes/hexo-theme-minima-1.1/source/js/nanobar.min.js","hash":"fc30e613dbce5b1b5602907c0966739480456875","modified":1611679716411},{"_id":"source/_posts/beta-0-1-and-general-update.md","hash":"0fea314f00435e2d45233aab93f64ca15c4e2133","modified":1632513627808},{"_id":"source/_posts/beta-0-2-presentation.md","hash":"619c0b1d822881ab4a4957f467803478cf95c38f","modified":1632513678137},{"_id":"source/_posts/devlog-september-2021.md","hash":"ebb743e3241bcb236f9f2402237663c08a84b304","modified":1632606275968},{"_id":"source/_posts/first-post.md","hash":"778a81ba663e4a0f5c71d02ae353377bfc9b6f59","modified":1611778744856},{"_id":"source/_posts/_hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1611670304170},{"_id":"themes/hexo-theme-minima-1.1/README.md","hash":"3da2edc3f09006d99f76332b3c5db979a784a327","modified":1611679715909},{"_id":"themes/hexo-theme-minima-1.1/LICENSE","hash":"fc8ceb662aadf2840e4aa80aa03aab56a901365f","modified":1611681385660},{"_id":"source/_posts/devlog-september-2021/thumbnail-devlog-september-2021.png","hash":"4215ae5c0e9945da0b3b62398828ab2526c5db66","modified":1632604686162},{"_id":"source/_posts/beta-0-2-presentation/2021-07-21-162137-beta-0-2-glow-example.png","hash":"7fd539da7b282c9c9bbba679979de6caa78918b1","modified":1626877309564},{"_id":"source/_posts/beta-0-2-presentation/2021-07-21-wav2bar-0-2-beta-before-after.png","hash":"2f3ba2def59b309f1739ceb6ddb0a00dfd90a9be","modified":1626878609350},{"_id":"source/_posts/beta-0-2-presentation/2021-07-21-w2b-0-2-beta-color-picker.png","hash":"9012cac4ee500bf7adbb7d60de432f9ecac995f5","modified":1626879073692},{"_id":"source/_posts/first-post/main_background.png","hash":"f4b6e4e9c0750d53a81f075d991df3b90542c2ba","modified":1599766626126},{"_id":"source/_posts/beta-0-2-presentation/2021-07-21-155400-wav2bar-0-2-0-beta.png","hash":"ff657788629da4c7d377ea10ea52b56f9f2890aa","modified":1626875681840},{"_id":"source/_posts/beta-0-1-and-general-update/thumbnail_wav2bar_showcase.jpg","hash":"086fae6c3cb51208e97c97b28c5422b3cf5de383","modified":1618427784279},{"_id":"public/atom.xml","hash":"3f84dbb44bcedf7c70c572a5973690bee33093b0","modified":1647726127724},{"_id":"public/2021/07/21/beta-0-2-presentation/index.html","hash":"c65dbf85d8fdaa7f2893af205150bcc8c7c318bc","modified":1642715382167},{"_id":"public/2021/09/25/devlog-september-2021/index.html","hash":"82a31bccd13d7e36da5effa11287c73c80b22488","modified":1642715382167},{"_id":"public/2021/01/26/first-post/index.html","hash":"b5d732173e4019b3481ee7b1d6b64a7e2bc4e532","modified":1642715382167},{"_id":"public/2021/05/29/beta-0-1-and-general-update/index.html","hash":"93c767e0f38016661a72f961501cdf02f49dcec1","modified":1642715382167},{"_id":"public/archives/index.html","hash":"2c864eb33165d735c2813b4843c0e4bfb8c15236","modified":1647725974110},{"_id":"public/archives/2021/index.html","hash":"c6a8bd8c8a38a2f7c8aa7595a316213cdcc80d7e","modified":1632605783877},{"_id":"public/archives/2021/01/index.html","hash":"e44bbcaf413ae18db25bf15f024d19e890d32040","modified":1632605783877},{"_id":"public/archives/2021/05/index.html","hash":"606e8a2987da29f77d973cf557f6639885e27b15","modified":1632605783877},{"_id":"public/archives/2021/07/index.html","hash":"24ba44acbcaf41dfd9bb25e533252ea8c5f357da","modified":1632605783877},{"_id":"public/categories/news/index.html","hash":"fd220af8980a2791e5947af0dcf15550bb7fff39","modified":1647725974110},{"_id":"public/archives/2021/09/index.html","hash":"a2d8260a49a072f1dcbada66c10477290b1f84cf","modified":1632605783877},{"_id":"public/index.html","hash":"d801b66473f70a06e7555ce730071224c16206d2","modified":1647725974110},{"_id":"public/categories/news/releases/index.html","hash":"128bb9f290c72e5e087512acb6fa2ed5059a8358","modified":1642782166762},{"_id":"public/categories/news/devlogs/index.html","hash":"6fbe5233d1976498409df6ce6a167cff700e56ad","modified":1642364078366},{"_id":"public/tags/news/index.html","hash":"7042ebe4903f16bbea3f37a0107a3cf5cf68aa06","modified":1647725974110},{"_id":"public/tags/beta/index.html","hash":"c0b55bea3622b8f5198fd0ef87559bc5da39e11e","modified":1642782166762},{"_id":"public/tags/release/index.html","hash":"124d51eb53f39fb0d9244804410111576a108c84","modified":1642782166762},{"_id":"public/tags/devlog/index.html","hash":"6e05d74e89d34b08065735647cd2357fbf8b7e9c","modified":1642364078366},{"_id":"public/images/favicon.png","hash":"3595958d6ada49061864107b341c6f39b456079f","modified":1632605783877},{"_id":"public/images/logo.png","hash":"e36010da438d83f70befc7815274166855a4a05f","modified":1632605783877},{"_id":"public/2021/09/25/devlog-september-2021/thumbnail-devlog-september-2021.png","hash":"4215ae5c0e9945da0b3b62398828ab2526c5db66","modified":1632605783877},{"_id":"public/css/custom.css","hash":"9954881c8b4fab040bf31be37e7e829e01053a1c","modified":1642715382167},{"_id":"public/css/dark.css","hash":"80cbe96cab94ba0e56a6d28ba4690adc6ab0dc09","modified":1632605783877},{"_id":"public/css/prism-dark.css","hash":"a863888f03eff55e3088942d80a8d887376be2fa","modified":1632605783877},{"_id":"public/css/normalize.css","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1632605783877},{"_id":"public/css/skeleton.css","hash":"dbe52bedd2154562fec1788579fdbe552c77240d","modified":1632605783877},{"_id":"public/js/nanobar.min.js","hash":"fc30e613dbce5b1b5602907c0966739480456875","modified":1632605783877},{"_id":"public/css/prism-line-numbers.css","hash":"a1692758d22c6cdf6fd1a8dafc9b4b98e41d3138","modified":1632605783877},{"_id":"public/2021/07/21/beta-0-2-presentation/2021-07-21-wav2bar-0-2-beta-before-after.png","hash":"2f3ba2def59b309f1739ceb6ddb0a00dfd90a9be","modified":1632605783877},{"_id":"public/2021/07/21/beta-0-2-presentation/2021-07-21-162137-beta-0-2-glow-example.png","hash":"7fd539da7b282c9c9bbba679979de6caa78918b1","modified":1632605783877},{"_id":"public/2021/07/21/beta-0-2-presentation/2021-07-21-w2b-0-2-beta-color-picker.png","hash":"9012cac4ee500bf7adbb7d60de432f9ecac995f5","modified":1632605783877},{"_id":"public/2021/01/26/first-post/main_background.png","hash":"f4b6e4e9c0750d53a81f075d991df3b90542c2ba","modified":1632605783877},{"_id":"public/2021/07/21/beta-0-2-presentation/2021-07-21-155400-wav2bar-0-2-0-beta.png","hash":"ff657788629da4c7d377ea10ea52b56f9f2890aa","modified":1632605783877},{"_id":"public/2021/05/29/beta-0-1-and-general-update/thumbnail_wav2bar_showcase.jpg","hash":"086fae6c3cb51208e97c97b28c5422b3cf5de383","modified":1632605783877},{"_id":"source/_posts/devlog-january-2022.md","hash":"a67df56f5682ab192f327388f601490e0dc19194","modified":1642365016250},{"_id":"source/_posts/devlog-january-2022/thumbnail-devlog-januray-2022.png","hash":"cbe8243f9607df43fa018d1c8982e6aeb0f8ed6c","modified":1642336408754},{"_id":"public/2022/01/16/devlog-january-2022/index.html","hash":"03a12a02562b2155fa0e30f0ebee10c28a0902a8","modified":1642715382167},{"_id":"public/archives/2022/index.html","hash":"2fad9c04fbfeee86ab8d14e88f93f8a9d8d76d7c","modified":1647725974110},{"_id":"public/archives/2022/01/index.html","hash":"d1ef7723cdde9d9dc1d06b5580c49b2675c5011a","modified":1642782166762},{"_id":"public/2022/01/16/devlog-january-2022/thumbnail-devlog-januray-2022.png","hash":"cbe8243f9607df43fa018d1c8982e6aeb0f8ed6c","modified":1642364078366},{"_id":"source/_posts/devlog-january-2022/thumbnail-devlog-january-2022.png","hash":"cbe8243f9607df43fa018d1c8982e6aeb0f8ed6c","modified":1642364373443},{"_id":"public/2022/01/16/devlog-january-2022/thumbnail-devlog-january-2022.png","hash":"cbe8243f9607df43fa018d1c8982e6aeb0f8ed6c","modified":1642364381823},{"_id":"source/_posts/beta-0-3-presentation.md","hash":"7bc896e2c54af4f1c1b468c56d400bb8d403eed5","modified":1643902182389},{"_id":"source/_posts/beta-0-3-presentation/2022-01-20_beta-0-3_loading.png","hash":"79051cf5947e980636d3626709ff22422caf89cb","modified":1642711558992},{"_id":"source/_posts/beta-0-3-presentation/2022-01-20_beta-0-3.png","hash":"fb448b935fbde2019eacb0077c9fc8d9f20e6bf8","modified":1642714742534},{"_id":"source/_posts/beta-0-3-presentation/2022-01-20_beta-0-3_random_color.png","hash":"977f3ac477e3c5b7ae7135bda74b60459aea1e79","modified":1642710975906},{"_id":"source/_posts/beta-0-3-presentation/2022-01-20_beta-0-3_top_ui.png","hash":"dca9b3ef93542e27281beba8f7d116d73d8aa1ea","modified":1642712619295},{"_id":"source/_posts/beta-0-3-presentation/2022-01-20_beta-0-3_rename.png","hash":"3756a15d22b55d285143ee3106a24b65af4381fe","modified":1642711975364},{"_id":"public/2022/01/20/beta-0-3-presentation/index.html","hash":"f3dc9f741ae2f183618935405bc4f57c90ae1ad5","modified":1642715574889},{"_id":"public/2022/01/20/beta-0-3-presentation/2022-01-20_beta-0-3_loading.png","hash":"79051cf5947e980636d3626709ff22422caf89cb","modified":1642714865216},{"_id":"public/2022/01/20/beta-0-3-presentation/2022-01-20_beta-0-3.png","hash":"fb448b935fbde2019eacb0077c9fc8d9f20e6bf8","modified":1642714865216},{"_id":"public/2022/01/20/beta-0-3-presentation/2022-01-20_beta-0-3_top_ui.png","hash":"dca9b3ef93542e27281beba8f7d116d73d8aa1ea","modified":1642714865216},{"_id":"public/2022/01/20/beta-0-3-presentation/2022-01-20_beta-0-3_random_color.png","hash":"977f3ac477e3c5b7ae7135bda74b60459aea1e79","modified":1642714865216},{"_id":"public/2022/01/20/beta-0-3-presentation/2022-01-20_beta-0-3_rename.png","hash":"3756a15d22b55d285143ee3106a24b65af4381fe","modified":1642714865216},{"_id":"public/2022/01/21/beta-0-3-presentation/index.html","hash":"f674e4e495fb884435203d78db175031562b7ab1","modified":1643903396508},{"_id":"public/2022/01/21/beta-0-3-presentation/2022-01-20_beta-0-3_loading.png","hash":"79051cf5947e980636d3626709ff22422caf89cb","modified":1642782166762},{"_id":"public/2022/01/21/beta-0-3-presentation/2022-01-20_beta-0-3.png","hash":"fb448b935fbde2019eacb0077c9fc8d9f20e6bf8","modified":1642782166762},{"_id":"public/2022/01/21/beta-0-3-presentation/2022-01-20_beta-0-3_random_color.png","hash":"977f3ac477e3c5b7ae7135bda74b60459aea1e79","modified":1642782166762},{"_id":"public/2022/01/21/beta-0-3-presentation/2022-01-20_beta-0-3_top_ui.png","hash":"dca9b3ef93542e27281beba8f7d116d73d8aa1ea","modified":1642782166762},{"_id":"public/2022/01/21/beta-0-3-presentation/2022-01-20_beta-0-3_rename.png","hash":"3756a15d22b55d285143ee3106a24b65af4381fe","modified":1642782166762},{"_id":"source/_posts/important-notice-february-2022.md","hash":"fb3ccbb4f7a5925a134a00f454deed02202f9c55","modified":1643903383882},{"_id":"source/_posts/important-notice-february-2022/2022-02-03_important-notice-feb-2022.png","hash":"4cb415b7214a04801a25c107c10b7ec7652d022a","modified":1643902698884},{"_id":"public/2022/02/03/important-notice-february-2022/index.html","hash":"9d6586ebe1461b284bb2d3521c5f74876d1d4351","modified":1643903396508},{"_id":"public/archives/2022/02/index.html","hash":"f49ef56d99991a1277fe5cdecaf151bd71d9f47a","modified":1647725974110},{"_id":"public/2022/02/03/important-notice-february-2022/2022-02-03_important-notice-feb-2022.png","hash":"4cb415b7214a04801a25c107c10b7ec7652d022a","modified":1643903396508},{"_id":"source/_posts/off-my-chest-march-2022.md","hash":"de957754fd936ba32f38e795edb7aea9aff9720c","modified":1647726120409},{"_id":"source/_posts/off-my-chest-march-2022/2022-01-20_beta-0-3_loading.png","hash":"79051cf5947e980636d3626709ff22422caf89cb","modified":1642711558992},{"_id":"public/2022/02/03/off-my-chest-march-2022/index.html","hash":"cb32f06ebff4a3e969bf34f721a5268c2f4b4290","modified":1647725865627},{"_id":"public/2022/02/03/off-my-chest-march-2022/2022-01-20_beta-0-3_loading.png","hash":"79051cf5947e980636d3626709ff22422caf89cb","modified":1647725865627},{"_id":"public/2022/03/19/off-my-chest-march-2022/index.html","hash":"72dc73b6bdcf7186a6d1ab9fbfa5a0f82c51349c","modified":1647726127724},{"_id":"public/archives/2022/03/index.html","hash":"9a76d0801cb1b9c09c94d8deb7e61927495414cb","modified":1647725974110},{"_id":"public/2022/03/19/off-my-chest-march-2022/2022-01-20_beta-0-3_loading.png","hash":"79051cf5947e980636d3626709ff22422caf89cb","modified":1647725974110}],"Category":[{"name":"news","_id":"cku0bbxd60002vsune100gbuj"},{"name":"releases","parent":"cku0bbxd60002vsune100gbuj","_id":"cku0bbxdb0009vsun69nv6lju"},{"name":"devlogs","parent":"cku0bbxd60002vsune100gbuj","_id":"cku0bbxdg000tvsun5ilxcb3i"}],"Data":[],"Page":[],"Post":[{"title":"Introducing Wav2Bar Beta 0.2.0","date":"2021-07-21T16:01:35.000Z","updated":"2021-07-21T16:28:11.000Z","thumbnail":"2021-07-21-155400-wav2bar-0-2-0-beta.png","_content":"\n\nHi!\n\nWav2Bar 0.2.0 has just been released with multiple improvements to try out. Here is a quick tour over the major changes of this version. For detailed changelogs, see the [Github Releases page](https://github.com/Picorims/wav2bar/releases/tag/v0.2.0 \"Wav2Bar 0.2.0 changelogs\").\n\n## SVG Filters support\n\nSVG filters are now supported on all objects, which allows you to interact with the graphical output in many ways. ***This feature is useful if you want to add visual effects to an object: blur, glow, image correction, distortion, extrusion, outline, shadows, lighting, etc.*** For instance, the outlined visualizer of the thumbnail and the image blurring on the thumbnail have both been made with SVG filters!\n\nSVG filters are added by pasting them in a dedicated field. A filter is defined within a `<filter></filter>` tag, all separated by `[#]`. So multiple filters are added by entering `<filter></filter>[#]<filter></filter>[#]...`. Within a filter tag, you define the filter by following the SVG specification. Now, everyone is not an expert in SVG, and the syntax can be intimidating. Hopefully, there are many resources on the Internet to help you out crafting them:\n\n- [SVG Filter Builder](https://svgfilters.com/): A graphical user interface for making SVG filters. Paste the result between `<filter></filter>` to make it work with Wav2Bar. Alternatively, you can use other tools like Inkscape to make them.\n- [A compilation of useful resources to learn SVG filters](https://speckyboy.com/svg-filter-tutorials/ \"The 10 Best SVG Filter Resources & Tutorials\"): It also showcase what you can do with SVG filters.\n- [maketext.io](https://maketext.io/): Doesn't work out of the box, but great for inspiration.\n- [RIP Tutorial](https://riptutorial.com/svg/topic/3262/filters): Another tutorial with examples.\n\nThis is definitely not a feature for everyone, but if you want to push Wav2Bar into its limits, that's a good way to do it.\n\n### Simple example\n\nLets take the following filter:\n```svg\n<filter>\n    <feGaussianBlur stdDeviation=\"5.5\" result=\"coloredBlur\"/>\n    <feMerge>\n        <feMergeNode in=\"coloredBlur\"/>\n        <feMergeNode in=\"SourceGraphic\"/>\n    </feMerge> \n</filter>\n```\nThis filter produces a glow effect, by blurring the source, and drawing it behind. Here is the end result:\n\n{% asset_img 2021-07-21-162137-beta-0-2-glow-example.png Glow effect on a visualizer with SVG filters %}\n\n## User interface improvements\n\nThis update also includes improvements for the user interface, mainly for object interaction.\n\n{% asset_img 2021-07-21-wav2bar-0-2-beta-before-after.png Glow effect on a visualizer with SVG filters %}\n\nThe user interface is globally more compact to display more options on screen, without having to scroll too much. Everything is also more aligned to improve readability. In some cases, when an invalid value is entered by the user, it will show in red, meaning the value has been ignored as it is not valid. Right now it is only effective on number fields, however it may be extended to text fields in the future.\n\nSome new features have been introduced as well. ***Some shortcut buttons have been added to easily resize and position objects. A color picker has also been added.*** It only initialize with hex values, but support multiple formats (except alpha). You can still tweak the colors with the string field if you need to.\n\n{% asset_img 2021-07-21-w2b-0-2-beta-color-picker.png Glow effect on a visualizer with SVG filters %}\n\nSome small tweaks have also been made here and there.\n\n## Experimental export mode\n\nWhen Wav2Bar exports a video, it first generates all frames as images, and then combine them into a video. Right now, the PNG format is used, and video exporting is painfully slow.\n\nAs an experimentation, you can now choose to use JPEG images with 100% quality instead. ***While it shouldn't impact the video quality, it should however make the export generally two times faster, and sometimes up to six times faster!***. The difference in speed is visually noticeable when looking at the progress.\n\nKeeping the export window behind the main window can also improve exporting speed and performance.\n\n## Bug fixes\n\nMultiple bugs have been patched in this release. The most noticeable are listed below:\n- Changing the points count of a visualizer no longer breaks its display.\n- Text overline was not showing properly.\n- Updated the font size help bubble, that was outdated.\n- Removed \"audio not saved\" from the saving option title, this was only accurate in pre 0.1.0-beta releases. ***(Audio has always been saved in public releases!)***\n\n## What's next ?\n\nI will probably make a 0.2.x update adding CLI support for some basic tasks. While not very useful for most users, it can be useful for Linux users wanting to automate some tasks. It will also be useful for myself for development purposes.\n\nAs for 0.3.0, it will atleast include a major rewrite of objects. Right now, its structure is not sustainable on the long term, and should be more flexible and extendable. It is also a good opportunity to add some quality of life features to them. This update may or may not receive major features, as this is a big task. However it is a necessary step towards maybe adding new visualizers.\n\nEnjoy!\n\n~ Picorims","source":"_posts/beta-0-2-presentation.md","raw":"---\ntitle: Introducing Wav2Bar Beta 0.2.0\ncategories:\n- news\n- releases\ndate: 2021-07-21 18:01:35\nupdated: 2021-07-21 18:28:11\ntags:\n- news\n- beta\n- release\nthumbnail: 2021-07-21-155400-wav2bar-0-2-0-beta.png\n---\n\n\nHi!\n\nWav2Bar 0.2.0 has just been released with multiple improvements to try out. Here is a quick tour over the major changes of this version. For detailed changelogs, see the [Github Releases page](https://github.com/Picorims/wav2bar/releases/tag/v0.2.0 \"Wav2Bar 0.2.0 changelogs\").\n\n## SVG Filters support\n\nSVG filters are now supported on all objects, which allows you to interact with the graphical output in many ways. ***This feature is useful if you want to add visual effects to an object: blur, glow, image correction, distortion, extrusion, outline, shadows, lighting, etc.*** For instance, the outlined visualizer of the thumbnail and the image blurring on the thumbnail have both been made with SVG filters!\n\nSVG filters are added by pasting them in a dedicated field. A filter is defined within a `<filter></filter>` tag, all separated by `[#]`. So multiple filters are added by entering `<filter></filter>[#]<filter></filter>[#]...`. Within a filter tag, you define the filter by following the SVG specification. Now, everyone is not an expert in SVG, and the syntax can be intimidating. Hopefully, there are many resources on the Internet to help you out crafting them:\n\n- [SVG Filter Builder](https://svgfilters.com/): A graphical user interface for making SVG filters. Paste the result between `<filter></filter>` to make it work with Wav2Bar. Alternatively, you can use other tools like Inkscape to make them.\n- [A compilation of useful resources to learn SVG filters](https://speckyboy.com/svg-filter-tutorials/ \"The 10 Best SVG Filter Resources & Tutorials\"): It also showcase what you can do with SVG filters.\n- [maketext.io](https://maketext.io/): Doesn't work out of the box, but great for inspiration.\n- [RIP Tutorial](https://riptutorial.com/svg/topic/3262/filters): Another tutorial with examples.\n\nThis is definitely not a feature for everyone, but if you want to push Wav2Bar into its limits, that's a good way to do it.\n\n### Simple example\n\nLets take the following filter:\n```svg\n<filter>\n    <feGaussianBlur stdDeviation=\"5.5\" result=\"coloredBlur\"/>\n    <feMerge>\n        <feMergeNode in=\"coloredBlur\"/>\n        <feMergeNode in=\"SourceGraphic\"/>\n    </feMerge> \n</filter>\n```\nThis filter produces a glow effect, by blurring the source, and drawing it behind. Here is the end result:\n\n{% asset_img 2021-07-21-162137-beta-0-2-glow-example.png Glow effect on a visualizer with SVG filters %}\n\n## User interface improvements\n\nThis update also includes improvements for the user interface, mainly for object interaction.\n\n{% asset_img 2021-07-21-wav2bar-0-2-beta-before-after.png Glow effect on a visualizer with SVG filters %}\n\nThe user interface is globally more compact to display more options on screen, without having to scroll too much. Everything is also more aligned to improve readability. In some cases, when an invalid value is entered by the user, it will show in red, meaning the value has been ignored as it is not valid. Right now it is only effective on number fields, however it may be extended to text fields in the future.\n\nSome new features have been introduced as well. ***Some shortcut buttons have been added to easily resize and position objects. A color picker has also been added.*** It only initialize with hex values, but support multiple formats (except alpha). You can still tweak the colors with the string field if you need to.\n\n{% asset_img 2021-07-21-w2b-0-2-beta-color-picker.png Glow effect on a visualizer with SVG filters %}\n\nSome small tweaks have also been made here and there.\n\n## Experimental export mode\n\nWhen Wav2Bar exports a video, it first generates all frames as images, and then combine them into a video. Right now, the PNG format is used, and video exporting is painfully slow.\n\nAs an experimentation, you can now choose to use JPEG images with 100% quality instead. ***While it shouldn't impact the video quality, it should however make the export generally two times faster, and sometimes up to six times faster!***. The difference in speed is visually noticeable when looking at the progress.\n\nKeeping the export window behind the main window can also improve exporting speed and performance.\n\n## Bug fixes\n\nMultiple bugs have been patched in this release. The most noticeable are listed below:\n- Changing the points count of a visualizer no longer breaks its display.\n- Text overline was not showing properly.\n- Updated the font size help bubble, that was outdated.\n- Removed \"audio not saved\" from the saving option title, this was only accurate in pre 0.1.0-beta releases. ***(Audio has always been saved in public releases!)***\n\n## What's next ?\n\nI will probably make a 0.2.x update adding CLI support for some basic tasks. While not very useful for most users, it can be useful for Linux users wanting to automate some tasks. It will also be useful for myself for development purposes.\n\nAs for 0.3.0, it will atleast include a major rewrite of objects. Right now, its structure is not sustainable on the long term, and should be more flexible and extendable. It is also a good opportunity to add some quality of life features to them. This update may or may not receive major features, as this is a big task. However it is a necessary step towards maybe adding new visualizers.\n\nEnjoy!\n\n~ Picorims","slug":"beta-0-2-presentation","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cku0bbxd10000vsun1w2v0s8l","content":"<p>Hi!</p>\n<p>Wav2Bar 0.2.0 has just been released with multiple improvements to try out. Here is a quick tour over the major changes of this version. For detailed changelogs, see the <a href=\"https://github.com/Picorims/wav2bar/releases/tag/v0.2.0\" title=\"Wav2Bar 0.2.0 changelogs\">Github Releases page</a>.</p>\n<h2 id=\"SVG-Filters-support\"><a href=\"#SVG-Filters-support\" class=\"headerlink\" title=\"SVG Filters support\"></a>SVG Filters support</h2><p>SVG filters are now supported on all objects, which allows you to interact with the graphical output in many ways. <strong><em>This feature is useful if you want to add visual effects to an object: blur, glow, image correction, distortion, extrusion, outline, shadows, lighting, etc.</em></strong> For instance, the outlined visualizer of the thumbnail and the image blurring on the thumbnail have both been made with SVG filters!</p>\n<p>SVG filters are added by pasting them in a dedicated field. A filter is defined within a <code>&lt;filter&gt;&lt;/filter&gt;</code> tag, all separated by <code>[#]</code>. So multiple filters are added by entering <code>&lt;filter&gt;&lt;/filter&gt;[#]&lt;filter&gt;&lt;/filter&gt;[#]...</code>. Within a filter tag, you define the filter by following the SVG specification. Now, everyone is not an expert in SVG, and the syntax can be intimidating. Hopefully, there are many resources on the Internet to help you out crafting them:</p>\n<ul>\n<li><a href=\"https://svgfilters.com/\">SVG Filter Builder</a>: A graphical user interface for making SVG filters. Paste the result between <code>&lt;filter&gt;&lt;/filter&gt;</code> to make it work with Wav2Bar. Alternatively, you can use other tools like Inkscape to make them.</li>\n<li><a href=\"https://speckyboy.com/svg-filter-tutorials/\" title=\"The 10 Best SVG Filter Resources &amp; Tutorials\">A compilation of useful resources to learn SVG filters</a>: It also showcase what you can do with SVG filters.</li>\n<li><a href=\"https://maketext.io/\">maketext.io</a>: Doesn’t work out of the box, but great for inspiration.</li>\n<li><a href=\"https://riptutorial.com/svg/topic/3262/filters\">RIP Tutorial</a>: Another tutorial with examples.</li>\n</ul>\n<p>This is definitely not a feature for everyone, but if you want to push Wav2Bar into its limits, that’s a good way to do it.</p>\n<h3 id=\"Simple-example\"><a href=\"#Simple-example\" class=\"headerlink\" title=\"Simple example\"></a>Simple example</h3><p>Lets take the following filter:</p>\n<pre class=\"line-numbers language-svg\" data-language=\"svg\"><code class=\"language-svg\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filter</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>feGaussianBlur</span> <span class=\"token attr-name\">stdDeviation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5.5<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">result</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>coloredBlur<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>feMerge</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>feMergeNode</span> <span class=\"token attr-name\">in</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>coloredBlur<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>feMergeNode</span> <span class=\"token attr-name\">in</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>SourceGraphic<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>feMerge</span><span class=\"token punctuation\">></span></span> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filter</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>This filter produces a glow effect, by blurring the source, and drawing it behind. Here is the end result:</p>\n<img src=\"/wav2bar-blog/public/2021/07/21/beta-0-2-presentation/2021-07-21-162137-beta-0-2-glow-example.png\" class=\"\" title=\"Glow effect on a visualizer with SVG filters\">\n\n<h2 id=\"User-interface-improvements\"><a href=\"#User-interface-improvements\" class=\"headerlink\" title=\"User interface improvements\"></a>User interface improvements</h2><p>This update also includes improvements for the user interface, mainly for object interaction.</p>\n<img src=\"/wav2bar-blog/public/2021/07/21/beta-0-2-presentation/2021-07-21-wav2bar-0-2-beta-before-after.png\" class=\"\" title=\"Glow effect on a visualizer with SVG filters\">\n\n<p>The user interface is globally more compact to display more options on screen, without having to scroll too much. Everything is also more aligned to improve readability. In some cases, when an invalid value is entered by the user, it will show in red, meaning the value has been ignored as it is not valid. Right now it is only effective on number fields, however it may be extended to text fields in the future.</p>\n<p>Some new features have been introduced as well. <strong><em>Some shortcut buttons have been added to easily resize and position objects. A color picker has also been added.</em></strong> It only initialize with hex values, but support multiple formats (except alpha). You can still tweak the colors with the string field if you need to.</p>\n<img src=\"/wav2bar-blog/public/2021/07/21/beta-0-2-presentation/2021-07-21-w2b-0-2-beta-color-picker.png\" class=\"\" title=\"Glow effect on a visualizer with SVG filters\">\n\n<p>Some small tweaks have also been made here and there.</p>\n<h2 id=\"Experimental-export-mode\"><a href=\"#Experimental-export-mode\" class=\"headerlink\" title=\"Experimental export mode\"></a>Experimental export mode</h2><p>When Wav2Bar exports a video, it first generates all frames as images, and then combine them into a video. Right now, the PNG format is used, and video exporting is painfully slow.</p>\n<p>As an experimentation, you can now choose to use JPEG images with 100% quality instead. <strong><em>While it shouldn’t impact the video quality, it should however make the export generally two times faster, and sometimes up to six times faster!</em></strong>. The difference in speed is visually noticeable when looking at the progress.</p>\n<p>Keeping the export window behind the main window can also improve exporting speed and performance.</p>\n<h2 id=\"Bug-fixes\"><a href=\"#Bug-fixes\" class=\"headerlink\" title=\"Bug fixes\"></a>Bug fixes</h2><p>Multiple bugs have been patched in this release. The most noticeable are listed below:</p>\n<ul>\n<li>Changing the points count of a visualizer no longer breaks its display.</li>\n<li>Text overline was not showing properly.</li>\n<li>Updated the font size help bubble, that was outdated.</li>\n<li>Removed “audio not saved” from the saving option title, this was only accurate in pre 0.1.0-beta releases. <strong><em>(Audio has always been saved in public releases!)</em></strong></li>\n</ul>\n<h2 id=\"What’s-next\"><a href=\"#What’s-next\" class=\"headerlink\" title=\"What’s next ?\"></a>What’s next ?</h2><p>I will probably make a 0.2.x update adding CLI support for some basic tasks. While not very useful for most users, it can be useful for Linux users wanting to automate some tasks. It will also be useful for myself for development purposes.</p>\n<p>As for 0.3.0, it will atleast include a major rewrite of objects. Right now, its structure is not sustainable on the long term, and should be more flexible and extendable. It is also a good opportunity to add some quality of life features to them. This update may or may not receive major features, as this is a big task. However it is a necessary step towards maybe adding new visualizers.</p>\n<p>Enjoy!</p>\n<p>~ Picorims</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Hi!</p>\n<p>Wav2Bar 0.2.0 has just been released with multiple improvements to try out. Here is a quick tour over the major changes of this version. For detailed changelogs, see the <a href=\"https://github.com/Picorims/wav2bar/releases/tag/v0.2.0\" title=\"Wav2Bar 0.2.0 changelogs\">Github Releases page</a>.</p>\n<h2 id=\"SVG-Filters-support\"><a href=\"#SVG-Filters-support\" class=\"headerlink\" title=\"SVG Filters support\"></a>SVG Filters support</h2><p>SVG filters are now supported on all objects, which allows you to interact with the graphical output in many ways. <strong><em>This feature is useful if you want to add visual effects to an object: blur, glow, image correction, distortion, extrusion, outline, shadows, lighting, etc.</em></strong> For instance, the outlined visualizer of the thumbnail and the image blurring on the thumbnail have both been made with SVG filters!</p>\n<p>SVG filters are added by pasting them in a dedicated field. A filter is defined within a <code>&lt;filter&gt;&lt;/filter&gt;</code> tag, all separated by <code>[#]</code>. So multiple filters are added by entering <code>&lt;filter&gt;&lt;/filter&gt;[#]&lt;filter&gt;&lt;/filter&gt;[#]...</code>. Within a filter tag, you define the filter by following the SVG specification. Now, everyone is not an expert in SVG, and the syntax can be intimidating. Hopefully, there are many resources on the Internet to help you out crafting them:</p>\n<ul>\n<li><a href=\"https://svgfilters.com/\">SVG Filter Builder</a>: A graphical user interface for making SVG filters. Paste the result between <code>&lt;filter&gt;&lt;/filter&gt;</code> to make it work with Wav2Bar. Alternatively, you can use other tools like Inkscape to make them.</li>\n<li><a href=\"https://speckyboy.com/svg-filter-tutorials/\" title=\"The 10 Best SVG Filter Resources &amp; Tutorials\">A compilation of useful resources to learn SVG filters</a>: It also showcase what you can do with SVG filters.</li>\n<li><a href=\"https://maketext.io/\">maketext.io</a>: Doesn’t work out of the box, but great for inspiration.</li>\n<li><a href=\"https://riptutorial.com/svg/topic/3262/filters\">RIP Tutorial</a>: Another tutorial with examples.</li>\n</ul>\n<p>This is definitely not a feature for everyone, but if you want to push Wav2Bar into its limits, that’s a good way to do it.</p>\n<h3 id=\"Simple-example\"><a href=\"#Simple-example\" class=\"headerlink\" title=\"Simple example\"></a>Simple example</h3><p>Lets take the following filter:</p>\n<pre class=\"line-numbers language-svg\" data-language=\"svg\"><code class=\"language-svg\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filter</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>feGaussianBlur</span> <span class=\"token attr-name\">stdDeviation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5.5<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">result</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>coloredBlur<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>feMerge</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>feMergeNode</span> <span class=\"token attr-name\">in</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>coloredBlur<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>feMergeNode</span> <span class=\"token attr-name\">in</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>SourceGraphic<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>feMerge</span><span class=\"token punctuation\">></span></span> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filter</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>This filter produces a glow effect, by blurring the source, and drawing it behind. Here is the end result:</p>\n<img src=\"/wav2bar-blog/public/2021/07/21/beta-0-2-presentation/2021-07-21-162137-beta-0-2-glow-example.png\" class=\"\" title=\"Glow effect on a visualizer with SVG filters\">\n\n<h2 id=\"User-interface-improvements\"><a href=\"#User-interface-improvements\" class=\"headerlink\" title=\"User interface improvements\"></a>User interface improvements</h2><p>This update also includes improvements for the user interface, mainly for object interaction.</p>\n<img src=\"/wav2bar-blog/public/2021/07/21/beta-0-2-presentation/2021-07-21-wav2bar-0-2-beta-before-after.png\" class=\"\" title=\"Glow effect on a visualizer with SVG filters\">\n\n<p>The user interface is globally more compact to display more options on screen, without having to scroll too much. Everything is also more aligned to improve readability. In some cases, when an invalid value is entered by the user, it will show in red, meaning the value has been ignored as it is not valid. Right now it is only effective on number fields, however it may be extended to text fields in the future.</p>\n<p>Some new features have been introduced as well. <strong><em>Some shortcut buttons have been added to easily resize and position objects. A color picker has also been added.</em></strong> It only initialize with hex values, but support multiple formats (except alpha). You can still tweak the colors with the string field if you need to.</p>\n<img src=\"/wav2bar-blog/public/2021/07/21/beta-0-2-presentation/2021-07-21-w2b-0-2-beta-color-picker.png\" class=\"\" title=\"Glow effect on a visualizer with SVG filters\">\n\n<p>Some small tweaks have also been made here and there.</p>\n<h2 id=\"Experimental-export-mode\"><a href=\"#Experimental-export-mode\" class=\"headerlink\" title=\"Experimental export mode\"></a>Experimental export mode</h2><p>When Wav2Bar exports a video, it first generates all frames as images, and then combine them into a video. Right now, the PNG format is used, and video exporting is painfully slow.</p>\n<p>As an experimentation, you can now choose to use JPEG images with 100% quality instead. <strong><em>While it shouldn’t impact the video quality, it should however make the export generally two times faster, and sometimes up to six times faster!</em></strong>. The difference in speed is visually noticeable when looking at the progress.</p>\n<p>Keeping the export window behind the main window can also improve exporting speed and performance.</p>\n<h2 id=\"Bug-fixes\"><a href=\"#Bug-fixes\" class=\"headerlink\" title=\"Bug fixes\"></a>Bug fixes</h2><p>Multiple bugs have been patched in this release. The most noticeable are listed below:</p>\n<ul>\n<li>Changing the points count of a visualizer no longer breaks its display.</li>\n<li>Text overline was not showing properly.</li>\n<li>Updated the font size help bubble, that was outdated.</li>\n<li>Removed “audio not saved” from the saving option title, this was only accurate in pre 0.1.0-beta releases. <strong><em>(Audio has always been saved in public releases!)</em></strong></li>\n</ul>\n<h2 id=\"What’s-next\"><a href=\"#What’s-next\" class=\"headerlink\" title=\"What’s next ?\"></a>What’s next ?</h2><p>I will probably make a 0.2.x update adding CLI support for some basic tasks. While not very useful for most users, it can be useful for Linux users wanting to automate some tasks. It will also be useful for myself for development purposes.</p>\n<p>As for 0.3.0, it will atleast include a major rewrite of objects. Right now, its structure is not sustainable on the long term, and should be more flexible and extendable. It is also a good opportunity to add some quality of life features to them. This update may or may not receive major features, as this is a big task. However it is a necessary step towards maybe adding new visualizers.</p>\n<p>Enjoy!</p>\n<p>~ Picorims</p>\n"},{"title":"First post!","date":"2021-01-26T15:36:21.000Z","updated":"2021-01-27T20:19:04.856Z","thumbnail":"main_background.png","_content":"\n\nHi!\n\nI aim to release updates and changelogs for Wav2Bar on this blog page. The future will tell if it is successful or not... For now, here's a visualizer made in Wavbar (it's the thumbnail but nevermind, let's get familiar at integrating images):\n\n{% asset_img main_background.png Fancy dark visualizer made in Wav2Bar 0.1.0 indev %}","source":"_posts/first-post.md","raw":"---\ntitle: First post!\ncategories:\n- news\ndate: 2021-01-26 16:36:21\nupdated:\ntags:\n- news\nthumbnail: main_background.png\n---\n\n\nHi!\n\nI aim to release updates and changelogs for Wav2Bar on this blog page. The future will tell if it is successful or not... For now, here's a visualizer made in Wavbar (it's the thumbnail but nevermind, let's get familiar at integrating images):\n\n{% asset_img main_background.png Fancy dark visualizer made in Wav2Bar 0.1.0 indev %}","slug":"first-post","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cku0bbxd50001vsunhcoke0eq","content":"<p>Hi!</p>\n<p>I aim to release updates and changelogs for Wav2Bar on this blog page. The future will tell if it is successful or not… For now, here’s a visualizer made in Wavbar (it’s the thumbnail but nevermind, let’s get familiar at integrating images):</p>\n<img src=\"/wav2bar-blog/public/2021/01/26/first-post/main_background.png\" class=\"\" title=\"Fancy dark visualizer made in Wav2Bar 0.1.0 indev\">","site":{"data":{}},"excerpt":"","more":"<p>Hi!</p>\n<p>I aim to release updates and changelogs for Wav2Bar on this blog page. The future will tell if it is successful or not… For now, here’s a visualizer made in Wavbar (it’s the thumbnail but nevermind, let’s get familiar at integrating images):</p>\n<img src=\"/wav2bar-blog/public/2021/01/26/first-post/main_background.png\" class=\"\" title=\"Fancy dark visualizer made in Wav2Bar 0.1.0 indev\">"},{"title":"Beta 0.1 and general update","date":"2021-05-28T22:26:40.000Z","updated":"2021-09-24T20:00:27.808Z","thumbnail":"thumbnail_wav2bar_showcase.jpg","_content":"\n\nHi!\n\nThe first beta of Wav2Bar (0.1) has been released a month ago. In this post I will talk about the first impressions I have on this very first release, and give you an update on what you can expect in the future.\n\n## Wav2Bar 0.1 is out\n\nFirst things first, Wav2Bar 0.1 has been released in April 2021. This first beta includes everything that was originally intended to be in the final version (minus great UI). Allongside the package release, I also made a small showcase video about the current possibilities of the software (which you can watch [here](https://youtu.be/NWCe2zKY8Wo \"Wav2bar Showcase video\") if you haven't).\n\nIn this first beta, you will probably notice the user interface could really use some improvements, and that's normal. I firstly focused on having something that works, before diving too much in the UI (before working well, it has to work!). It will be improved throughout the next betas gradually. You probably also noticed that the video export can be very slow. I am aware of this problem, and while I have some ideas to try reducing it a tiny bit, it probably will stay like that for a while if not forever.\n\n## Answer to some feedback I received\n\nI didn't expect much feedback on the first release, especially as it has not been widely shared (a few social media posts and some shared links on Discord). A lot of commercial tools, online generators from templates and tutorials for these exists on the Internet, which makes it very difficult to be viewed anyway.\n\nFirstly I would like to give many thanks to the few people that tried it and provided direct feedback as well as some kind words about the project. It is very fullfilling to know it is helpful to some people! I also want to thanks those who stared the project on GitHub, that's not something I expected and it's also very motivating to see people interested in the project.\n\nNow, I also got some suggestions that I would like to share and talk about. Someone on GitHub suggested a Linux CLI for the tool. While this is just a too big task to handle for a solo driven project, I like the idea to be able to launch an export from the command line given a created project. That's not something I would implement anytime soon, but I put it in my todo list as a suggestion for a future update.\n\nSomeone by mail also suggested 2 things more graphical related. Firstly, he mentionned that the preview and the actual video could sometimes have differences in terms of rendering. While the objects are rendered the exact same way, the speed of the visualisation or the behavior of the particles can show some differences between the two. This is something that I am aware of, but that can't be fixed, due to how this is processed behind the scenes. The export performs a *\"delayed\"* rendering that renders each frame independently with strict respect of time. The preview however is performed by another API and is real time computation of the audio data. That means that if the FPS drop, the preview will inevitably be impacted because some frames are skipped, but the smoothing processes always base itself on the previous frame. I do not consider it an issue because, as the term preview imply, the goal is to give a precise enough idea of how the rendering will look, rather than live rendering how it will exactly look at export. While some improvements could surely be done, this would complexify the backend rendering, and right now refactoring the code and improving the user interface is in my opinion more important to deal with.\n\nSecondly, he also suggested to add support for some additional effects (besides the shadow feature). This is something I had in mind since the beginning but that I had planned for much later when the software would have evolved enough. However, I may come back on my decision and add it much earlier. On the technical side, it would be quite easy to support, as SVG filters exists for the web and vector graphics, and it can do pretty [impressive stuff](https://www.smashingmagazine.com/2015/05/why-the-svg-filter-is-awesome/ \"The Art Of SVG Filters And Why It Is Awesome\") when you know how to use it. On the UI side however, making UI to craft these would be very tedious and require probably months of development, considering all the available options. The compromise I see is to add support for plain text SVG filters, and let the user deal with external tools to craft them (such as [this one](https://svgfilters.client.io/ \"SVG Filter Builder\") called SVG Filter Builder).\n\n## What to expect in the future updates on the short term\n\n### The Git LFS issue\n\nBefore doing any new update, I have to fix an issue related to Git LFS. I discovered (with quite a lot of frustration because it is not mentioned anywhere, and is hidden in obscure sub menus until the day you receive a mail telling that you used 80% of the bandwidth) that GitHub impose 1GB of bandwidth for Git LFS downloads. Considering GitHub requires Git LFS for everything that is bigger than 100MB (and the Electron framework has a 100MB executable itself), that means nobody (not even me) can download Git LFS assets more than about 8 times a month. If I do, it is locked until next month. This include git clones, zip download from the front page of the project (green download button), but also forks and everything done on them. This is not sustainable at all on the long term, and paying $5 per month for 50Gb of bandwidth isn't worth it at all (what if it becomes not enough again?).\n\nTo address this issue, I will get rid of the node_modules folder and manually add the source code archive in future releases. I will also remove FFmpeg from the repository (It was not tracked anymore since a while back but still exists on the remote master branch, but there is absolutely no reason for it not to go away). Basically, I will just get rid of Git LFS from the entire project. However, I have to make sure to do it right, and try not to mess up the repository when doing so. That's why I will do it when I have enough free time to do it without too much pressure or stress. That also means no new beta will be published before this is addressed.\n\n### What is planned in the near future\n\nRight now, the main goals are to gradually refactor the code behind the scenes and mostly work on the user interface. In the next major beta (0.2), one of the improvements that I'd especially like to bring would be to improve size and position interaction in the control panel (for example, one click centering without having to do it approximately or to open the calculator). There might be a color picker as well, but I'm not yet sure the way I want to implement it (web version or more advanced one from an external library).\n\nI will also experiment with SVG filters and see if I can bring it as an experimental feature as well. What this means is that support for all kinds of masks and (static) effects could be possible on all objects, allowing stuff like color manipulation, source manipulation (for shadows, offsets, extrusion...), applying effects like blur or distortion, noise based effects, etc. If that is a success, it could be a pretty big improvement to the rendering capabilities! Animated SVG filters however won't work, due to the way the export rendering works.\n\nI will also make a small experiment on the export rendering to see if I can slightly improve performances by choosing .jpg over .png for screenshots. I have no expectations but want to see if it can have an impact (while keeping in mind the rendering quality of course).\n\n## May and June are (going to be) calm\n\nSince Wav2Bar 0.1.1, you might have noticed there have been pretty much no changes done, and that's because May and June are extremely busy for me. I have right now many university projects to deal with, and also started to get seriously behind with university work for personal reasons (mostly due to permanent high speed in all subjects). For that reason and to avoid burnout, I need to put Wav2Bar on the side until I'm done with this year's exams.\n\nHowever, I remain available to answer [issue reports and feature requests on GitHub](https://github.com/Picorims/wav2bar/issues). You can also reach me more directly on the [Discord Server](https://discord.gg/EVGzfdP) or by mail.\n\nThat's about it for this post, enjoy your day/night :).\n\n~ Picorims","source":"_posts/beta-0-1-and-general-update.md","raw":"---\ntitle: Beta 0.1 and general update\ncategories:\n- news\n- releases\ndate: 2021-05-29 00:26:40\nupdated:\ntags:\n- news\n- beta\n- release\nthumbnail: thumbnail_wav2bar_showcase.jpg\n---\n\n\nHi!\n\nThe first beta of Wav2Bar (0.1) has been released a month ago. In this post I will talk about the first impressions I have on this very first release, and give you an update on what you can expect in the future.\n\n## Wav2Bar 0.1 is out\n\nFirst things first, Wav2Bar 0.1 has been released in April 2021. This first beta includes everything that was originally intended to be in the final version (minus great UI). Allongside the package release, I also made a small showcase video about the current possibilities of the software (which you can watch [here](https://youtu.be/NWCe2zKY8Wo \"Wav2bar Showcase video\") if you haven't).\n\nIn this first beta, you will probably notice the user interface could really use some improvements, and that's normal. I firstly focused on having something that works, before diving too much in the UI (before working well, it has to work!). It will be improved throughout the next betas gradually. You probably also noticed that the video export can be very slow. I am aware of this problem, and while I have some ideas to try reducing it a tiny bit, it probably will stay like that for a while if not forever.\n\n## Answer to some feedback I received\n\nI didn't expect much feedback on the first release, especially as it has not been widely shared (a few social media posts and some shared links on Discord). A lot of commercial tools, online generators from templates and tutorials for these exists on the Internet, which makes it very difficult to be viewed anyway.\n\nFirstly I would like to give many thanks to the few people that tried it and provided direct feedback as well as some kind words about the project. It is very fullfilling to know it is helpful to some people! I also want to thanks those who stared the project on GitHub, that's not something I expected and it's also very motivating to see people interested in the project.\n\nNow, I also got some suggestions that I would like to share and talk about. Someone on GitHub suggested a Linux CLI for the tool. While this is just a too big task to handle for a solo driven project, I like the idea to be able to launch an export from the command line given a created project. That's not something I would implement anytime soon, but I put it in my todo list as a suggestion for a future update.\n\nSomeone by mail also suggested 2 things more graphical related. Firstly, he mentionned that the preview and the actual video could sometimes have differences in terms of rendering. While the objects are rendered the exact same way, the speed of the visualisation or the behavior of the particles can show some differences between the two. This is something that I am aware of, but that can't be fixed, due to how this is processed behind the scenes. The export performs a *\"delayed\"* rendering that renders each frame independently with strict respect of time. The preview however is performed by another API and is real time computation of the audio data. That means that if the FPS drop, the preview will inevitably be impacted because some frames are skipped, but the smoothing processes always base itself on the previous frame. I do not consider it an issue because, as the term preview imply, the goal is to give a precise enough idea of how the rendering will look, rather than live rendering how it will exactly look at export. While some improvements could surely be done, this would complexify the backend rendering, and right now refactoring the code and improving the user interface is in my opinion more important to deal with.\n\nSecondly, he also suggested to add support for some additional effects (besides the shadow feature). This is something I had in mind since the beginning but that I had planned for much later when the software would have evolved enough. However, I may come back on my decision and add it much earlier. On the technical side, it would be quite easy to support, as SVG filters exists for the web and vector graphics, and it can do pretty [impressive stuff](https://www.smashingmagazine.com/2015/05/why-the-svg-filter-is-awesome/ \"The Art Of SVG Filters And Why It Is Awesome\") when you know how to use it. On the UI side however, making UI to craft these would be very tedious and require probably months of development, considering all the available options. The compromise I see is to add support for plain text SVG filters, and let the user deal with external tools to craft them (such as [this one](https://svgfilters.client.io/ \"SVG Filter Builder\") called SVG Filter Builder).\n\n## What to expect in the future updates on the short term\n\n### The Git LFS issue\n\nBefore doing any new update, I have to fix an issue related to Git LFS. I discovered (with quite a lot of frustration because it is not mentioned anywhere, and is hidden in obscure sub menus until the day you receive a mail telling that you used 80% of the bandwidth) that GitHub impose 1GB of bandwidth for Git LFS downloads. Considering GitHub requires Git LFS for everything that is bigger than 100MB (and the Electron framework has a 100MB executable itself), that means nobody (not even me) can download Git LFS assets more than about 8 times a month. If I do, it is locked until next month. This include git clones, zip download from the front page of the project (green download button), but also forks and everything done on them. This is not sustainable at all on the long term, and paying $5 per month for 50Gb of bandwidth isn't worth it at all (what if it becomes not enough again?).\n\nTo address this issue, I will get rid of the node_modules folder and manually add the source code archive in future releases. I will also remove FFmpeg from the repository (It was not tracked anymore since a while back but still exists on the remote master branch, but there is absolutely no reason for it not to go away). Basically, I will just get rid of Git LFS from the entire project. However, I have to make sure to do it right, and try not to mess up the repository when doing so. That's why I will do it when I have enough free time to do it without too much pressure or stress. That also means no new beta will be published before this is addressed.\n\n### What is planned in the near future\n\nRight now, the main goals are to gradually refactor the code behind the scenes and mostly work on the user interface. In the next major beta (0.2), one of the improvements that I'd especially like to bring would be to improve size and position interaction in the control panel (for example, one click centering without having to do it approximately or to open the calculator). There might be a color picker as well, but I'm not yet sure the way I want to implement it (web version or more advanced one from an external library).\n\nI will also experiment with SVG filters and see if I can bring it as an experimental feature as well. What this means is that support for all kinds of masks and (static) effects could be possible on all objects, allowing stuff like color manipulation, source manipulation (for shadows, offsets, extrusion...), applying effects like blur or distortion, noise based effects, etc. If that is a success, it could be a pretty big improvement to the rendering capabilities! Animated SVG filters however won't work, due to the way the export rendering works.\n\nI will also make a small experiment on the export rendering to see if I can slightly improve performances by choosing .jpg over .png for screenshots. I have no expectations but want to see if it can have an impact (while keeping in mind the rendering quality of course).\n\n## May and June are (going to be) calm\n\nSince Wav2Bar 0.1.1, you might have noticed there have been pretty much no changes done, and that's because May and June are extremely busy for me. I have right now many university projects to deal with, and also started to get seriously behind with university work for personal reasons (mostly due to permanent high speed in all subjects). For that reason and to avoid burnout, I need to put Wav2Bar on the side until I'm done with this year's exams.\n\nHowever, I remain available to answer [issue reports and feature requests on GitHub](https://github.com/Picorims/wav2bar/issues). You can also reach me more directly on the [Discord Server](https://discord.gg/EVGzfdP) or by mail.\n\nThat's about it for this post, enjoy your day/night :).\n\n~ Picorims","slug":"beta-0-1-and-general-update","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cku0bbxd70004vsun2hxt5gzw","content":"<p>Hi!</p>\n<p>The first beta of Wav2Bar (0.1) has been released a month ago. In this post I will talk about the first impressions I have on this very first release, and give you an update on what you can expect in the future.</p>\n<h2 id=\"Wav2Bar-0-1-is-out\"><a href=\"#Wav2Bar-0-1-is-out\" class=\"headerlink\" title=\"Wav2Bar 0.1 is out\"></a>Wav2Bar 0.1 is out</h2><p>First things first, Wav2Bar 0.1 has been released in April 2021. This first beta includes everything that was originally intended to be in the final version (minus great UI). Allongside the package release, I also made a small showcase video about the current possibilities of the software (which you can watch <a href=\"https://youtu.be/NWCe2zKY8Wo\" title=\"Wav2bar Showcase video\">here</a> if you haven’t).</p>\n<p>In this first beta, you will probably notice the user interface could really use some improvements, and that’s normal. I firstly focused on having something that works, before diving too much in the UI (before working well, it has to work!). It will be improved throughout the next betas gradually. You probably also noticed that the video export can be very slow. I am aware of this problem, and while I have some ideas to try reducing it a tiny bit, it probably will stay like that for a while if not forever.</p>\n<h2 id=\"Answer-to-some-feedback-I-received\"><a href=\"#Answer-to-some-feedback-I-received\" class=\"headerlink\" title=\"Answer to some feedback I received\"></a>Answer to some feedback I received</h2><p>I didn’t expect much feedback on the first release, especially as it has not been widely shared (a few social media posts and some shared links on Discord). A lot of commercial tools, online generators from templates and tutorials for these exists on the Internet, which makes it very difficult to be viewed anyway.</p>\n<p>Firstly I would like to give many thanks to the few people that tried it and provided direct feedback as well as some kind words about the project. It is very fullfilling to know it is helpful to some people! I also want to thanks those who stared the project on GitHub, that’s not something I expected and it’s also very motivating to see people interested in the project.</p>\n<p>Now, I also got some suggestions that I would like to share and talk about. Someone on GitHub suggested a Linux CLI for the tool. While this is just a too big task to handle for a solo driven project, I like the idea to be able to launch an export from the command line given a created project. That’s not something I would implement anytime soon, but I put it in my todo list as a suggestion for a future update.</p>\n<p>Someone by mail also suggested 2 things more graphical related. Firstly, he mentionned that the preview and the actual video could sometimes have differences in terms of rendering. While the objects are rendered the exact same way, the speed of the visualisation or the behavior of the particles can show some differences between the two. This is something that I am aware of, but that can’t be fixed, due to how this is processed behind the scenes. The export performs a <em>“delayed”</em> rendering that renders each frame independently with strict respect of time. The preview however is performed by another API and is real time computation of the audio data. That means that if the FPS drop, the preview will inevitably be impacted because some frames are skipped, but the smoothing processes always base itself on the previous frame. I do not consider it an issue because, as the term preview imply, the goal is to give a precise enough idea of how the rendering will look, rather than live rendering how it will exactly look at export. While some improvements could surely be done, this would complexify the backend rendering, and right now refactoring the code and improving the user interface is in my opinion more important to deal with.</p>\n<p>Secondly, he also suggested to add support for some additional effects (besides the shadow feature). This is something I had in mind since the beginning but that I had planned for much later when the software would have evolved enough. However, I may come back on my decision and add it much earlier. On the technical side, it would be quite easy to support, as SVG filters exists for the web and vector graphics, and it can do pretty <a href=\"https://www.smashingmagazine.com/2015/05/why-the-svg-filter-is-awesome/\" title=\"The Art Of SVG Filters And Why It Is Awesome\">impressive stuff</a> when you know how to use it. On the UI side however, making UI to craft these would be very tedious and require probably months of development, considering all the available options. The compromise I see is to add support for plain text SVG filters, and let the user deal with external tools to craft them (such as <a href=\"https://svgfilters.client.io/\" title=\"SVG Filter Builder\">this one</a> called SVG Filter Builder).</p>\n<h2 id=\"What-to-expect-in-the-future-updates-on-the-short-term\"><a href=\"#What-to-expect-in-the-future-updates-on-the-short-term\" class=\"headerlink\" title=\"What to expect in the future updates on the short term\"></a>What to expect in the future updates on the short term</h2><h3 id=\"The-Git-LFS-issue\"><a href=\"#The-Git-LFS-issue\" class=\"headerlink\" title=\"The Git LFS issue\"></a>The Git LFS issue</h3><p>Before doing any new update, I have to fix an issue related to Git LFS. I discovered (with quite a lot of frustration because it is not mentioned anywhere, and is hidden in obscure sub menus until the day you receive a mail telling that you used 80% of the bandwidth) that GitHub impose 1GB of bandwidth for Git LFS downloads. Considering GitHub requires Git LFS for everything that is bigger than 100MB (and the Electron framework has a 100MB executable itself), that means nobody (not even me) can download Git LFS assets more than about 8 times a month. If I do, it is locked until next month. This include git clones, zip download from the front page of the project (green download button), but also forks and everything done on them. This is not sustainable at all on the long term, and paying $5 per month for 50Gb of bandwidth isn’t worth it at all (what if it becomes not enough again?).</p>\n<p>To address this issue, I will get rid of the node_modules folder and manually add the source code archive in future releases. I will also remove FFmpeg from the repository (It was not tracked anymore since a while back but still exists on the remote master branch, but there is absolutely no reason for it not to go away). Basically, I will just get rid of Git LFS from the entire project. However, I have to make sure to do it right, and try not to mess up the repository when doing so. That’s why I will do it when I have enough free time to do it without too much pressure or stress. That also means no new beta will be published before this is addressed.</p>\n<h3 id=\"What-is-planned-in-the-near-future\"><a href=\"#What-is-planned-in-the-near-future\" class=\"headerlink\" title=\"What is planned in the near future\"></a>What is planned in the near future</h3><p>Right now, the main goals are to gradually refactor the code behind the scenes and mostly work on the user interface. In the next major beta (0.2), one of the improvements that I’d especially like to bring would be to improve size and position interaction in the control panel (for example, one click centering without having to do it approximately or to open the calculator). There might be a color picker as well, but I’m not yet sure the way I want to implement it (web version or more advanced one from an external library).</p>\n<p>I will also experiment with SVG filters and see if I can bring it as an experimental feature as well. What this means is that support for all kinds of masks and (static) effects could be possible on all objects, allowing stuff like color manipulation, source manipulation (for shadows, offsets, extrusion…), applying effects like blur or distortion, noise based effects, etc. If that is a success, it could be a pretty big improvement to the rendering capabilities! Animated SVG filters however won’t work, due to the way the export rendering works.</p>\n<p>I will also make a small experiment on the export rendering to see if I can slightly improve performances by choosing .jpg over .png for screenshots. I have no expectations but want to see if it can have an impact (while keeping in mind the rendering quality of course).</p>\n<h2 id=\"May-and-June-are-going-to-be-calm\"><a href=\"#May-and-June-are-going-to-be-calm\" class=\"headerlink\" title=\"May and June are (going to be) calm\"></a>May and June are (going to be) calm</h2><p>Since Wav2Bar 0.1.1, you might have noticed there have been pretty much no changes done, and that’s because May and June are extremely busy for me. I have right now many university projects to deal with, and also started to get seriously behind with university work for personal reasons (mostly due to permanent high speed in all subjects). For that reason and to avoid burnout, I need to put Wav2Bar on the side until I’m done with this year’s exams.</p>\n<p>However, I remain available to answer <a href=\"https://github.com/Picorims/wav2bar/issues\">issue reports and feature requests on GitHub</a>. You can also reach me more directly on the <a href=\"https://discord.gg/EVGzfdP\">Discord Server</a> or by mail.</p>\n<p>That’s about it for this post, enjoy your day/night :).</p>\n<p>~ Picorims</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Hi!</p>\n<p>The first beta of Wav2Bar (0.1) has been released a month ago. In this post I will talk about the first impressions I have on this very first release, and give you an update on what you can expect in the future.</p>\n<h2 id=\"Wav2Bar-0-1-is-out\"><a href=\"#Wav2Bar-0-1-is-out\" class=\"headerlink\" title=\"Wav2Bar 0.1 is out\"></a>Wav2Bar 0.1 is out</h2><p>First things first, Wav2Bar 0.1 has been released in April 2021. This first beta includes everything that was originally intended to be in the final version (minus great UI). Allongside the package release, I also made a small showcase video about the current possibilities of the software (which you can watch <a href=\"https://youtu.be/NWCe2zKY8Wo\" title=\"Wav2bar Showcase video\">here</a> if you haven’t).</p>\n<p>In this first beta, you will probably notice the user interface could really use some improvements, and that’s normal. I firstly focused on having something that works, before diving too much in the UI (before working well, it has to work!). It will be improved throughout the next betas gradually. You probably also noticed that the video export can be very slow. I am aware of this problem, and while I have some ideas to try reducing it a tiny bit, it probably will stay like that for a while if not forever.</p>\n<h2 id=\"Answer-to-some-feedback-I-received\"><a href=\"#Answer-to-some-feedback-I-received\" class=\"headerlink\" title=\"Answer to some feedback I received\"></a>Answer to some feedback I received</h2><p>I didn’t expect much feedback on the first release, especially as it has not been widely shared (a few social media posts and some shared links on Discord). A lot of commercial tools, online generators from templates and tutorials for these exists on the Internet, which makes it very difficult to be viewed anyway.</p>\n<p>Firstly I would like to give many thanks to the few people that tried it and provided direct feedback as well as some kind words about the project. It is very fullfilling to know it is helpful to some people! I also want to thanks those who stared the project on GitHub, that’s not something I expected and it’s also very motivating to see people interested in the project.</p>\n<p>Now, I also got some suggestions that I would like to share and talk about. Someone on GitHub suggested a Linux CLI for the tool. While this is just a too big task to handle for a solo driven project, I like the idea to be able to launch an export from the command line given a created project. That’s not something I would implement anytime soon, but I put it in my todo list as a suggestion for a future update.</p>\n<p>Someone by mail also suggested 2 things more graphical related. Firstly, he mentionned that the preview and the actual video could sometimes have differences in terms of rendering. While the objects are rendered the exact same way, the speed of the visualisation or the behavior of the particles can show some differences between the two. This is something that I am aware of, but that can’t be fixed, due to how this is processed behind the scenes. The export performs a <em>“delayed”</em> rendering that renders each frame independently with strict respect of time. The preview however is performed by another API and is real time computation of the audio data. That means that if the FPS drop, the preview will inevitably be impacted because some frames are skipped, but the smoothing processes always base itself on the previous frame. I do not consider it an issue because, as the term preview imply, the goal is to give a precise enough idea of how the rendering will look, rather than live rendering how it will exactly look at export. While some improvements could surely be done, this would complexify the backend rendering, and right now refactoring the code and improving the user interface is in my opinion more important to deal with.</p>\n<p>Secondly, he also suggested to add support for some additional effects (besides the shadow feature). This is something I had in mind since the beginning but that I had planned for much later when the software would have evolved enough. However, I may come back on my decision and add it much earlier. On the technical side, it would be quite easy to support, as SVG filters exists for the web and vector graphics, and it can do pretty <a href=\"https://www.smashingmagazine.com/2015/05/why-the-svg-filter-is-awesome/\" title=\"The Art Of SVG Filters And Why It Is Awesome\">impressive stuff</a> when you know how to use it. On the UI side however, making UI to craft these would be very tedious and require probably months of development, considering all the available options. The compromise I see is to add support for plain text SVG filters, and let the user deal with external tools to craft them (such as <a href=\"https://svgfilters.client.io/\" title=\"SVG Filter Builder\">this one</a> called SVG Filter Builder).</p>\n<h2 id=\"What-to-expect-in-the-future-updates-on-the-short-term\"><a href=\"#What-to-expect-in-the-future-updates-on-the-short-term\" class=\"headerlink\" title=\"What to expect in the future updates on the short term\"></a>What to expect in the future updates on the short term</h2><h3 id=\"The-Git-LFS-issue\"><a href=\"#The-Git-LFS-issue\" class=\"headerlink\" title=\"The Git LFS issue\"></a>The Git LFS issue</h3><p>Before doing any new update, I have to fix an issue related to Git LFS. I discovered (with quite a lot of frustration because it is not mentioned anywhere, and is hidden in obscure sub menus until the day you receive a mail telling that you used 80% of the bandwidth) that GitHub impose 1GB of bandwidth for Git LFS downloads. Considering GitHub requires Git LFS for everything that is bigger than 100MB (and the Electron framework has a 100MB executable itself), that means nobody (not even me) can download Git LFS assets more than about 8 times a month. If I do, it is locked until next month. This include git clones, zip download from the front page of the project (green download button), but also forks and everything done on them. This is not sustainable at all on the long term, and paying $5 per month for 50Gb of bandwidth isn’t worth it at all (what if it becomes not enough again?).</p>\n<p>To address this issue, I will get rid of the node_modules folder and manually add the source code archive in future releases. I will also remove FFmpeg from the repository (It was not tracked anymore since a while back but still exists on the remote master branch, but there is absolutely no reason for it not to go away). Basically, I will just get rid of Git LFS from the entire project. However, I have to make sure to do it right, and try not to mess up the repository when doing so. That’s why I will do it when I have enough free time to do it without too much pressure or stress. That also means no new beta will be published before this is addressed.</p>\n<h3 id=\"What-is-planned-in-the-near-future\"><a href=\"#What-is-planned-in-the-near-future\" class=\"headerlink\" title=\"What is planned in the near future\"></a>What is planned in the near future</h3><p>Right now, the main goals are to gradually refactor the code behind the scenes and mostly work on the user interface. In the next major beta (0.2), one of the improvements that I’d especially like to bring would be to improve size and position interaction in the control panel (for example, one click centering without having to do it approximately or to open the calculator). There might be a color picker as well, but I’m not yet sure the way I want to implement it (web version or more advanced one from an external library).</p>\n<p>I will also experiment with SVG filters and see if I can bring it as an experimental feature as well. What this means is that support for all kinds of masks and (static) effects could be possible on all objects, allowing stuff like color manipulation, source manipulation (for shadows, offsets, extrusion…), applying effects like blur or distortion, noise based effects, etc. If that is a success, it could be a pretty big improvement to the rendering capabilities! Animated SVG filters however won’t work, due to the way the export rendering works.</p>\n<p>I will also make a small experiment on the export rendering to see if I can slightly improve performances by choosing .jpg over .png for screenshots. I have no expectations but want to see if it can have an impact (while keeping in mind the rendering quality of course).</p>\n<h2 id=\"May-and-June-are-going-to-be-calm\"><a href=\"#May-and-June-are-going-to-be-calm\" class=\"headerlink\" title=\"May and June are (going to be) calm\"></a>May and June are (going to be) calm</h2><p>Since Wav2Bar 0.1.1, you might have noticed there have been pretty much no changes done, and that’s because May and June are extremely busy for me. I have right now many university projects to deal with, and also started to get seriously behind with university work for personal reasons (mostly due to permanent high speed in all subjects). For that reason and to avoid burnout, I need to put Wav2Bar on the side until I’m done with this year’s exams.</p>\n<p>However, I remain available to answer <a href=\"https://github.com/Picorims/wav2bar/issues\">issue reports and feature requests on GitHub</a>. You can also reach me more directly on the <a href=\"https://discord.gg/EVGzfdP\">Discord Server</a> or by mail.</p>\n<p>That’s about it for this post, enjoy your day/night :).</p>\n<p>~ Picorims</p>\n"},{"title":"Devlog - September 2021","date":"2021-09-25T21:21:51.000Z","updated":"2021-09-25T21:44:26.000Z","thumbnail":"thumbnail-devlog-september-2021.png","_content":"\nHi!\n\nI have been quite silent since Wav2Bar 0.2.0 release on July. I think now is a good opportunity to let you know how things are going, as well as giving plans for the next month. Let's get started!\n\n## On going and planned updates\n\n### Wav2Bar 0.3.0 development\n\nWav2Bar 0.3.0 development Started in early August. This update is mostly a technical update, and thus for many reasons.\n\nIn the current implementation, each object has its own independent setup. That means that every time a change has to be made, it has to be repeated for every objects, which is very time consuming. Right now there are six available objects, so common changes and bug fixes have to be made six times. Let's be honest, this is absolutely not sustainable on the long term. That's why some heavy refactoring is being made in the background since August.\n\nThat said refactoring has been almost finished this week. So I would say add that one third of the update has been completed. I know this is taking a lot of times, but this is necessary to be able to implement new visualizers. So what else has to be made?\n\n### Roadmap\n\nHere is a roadmap of the future updates and planned features. This roadmap is absolutely not set in stone, and is subject to changes if needed as the times goes. But this should give you a good picture of what direction development is taking.\n\n- **0.3.0**\n    - **Write converter to new save format.** With the heavy refactoring, the inner structure of saves has changed quite a lot. So there is some work to do so support older saves.\n    - **Fix 0.2.2 issue where opening a new project doesn't clean up old objects' interface.**\n    - **Hide/show object feature.** This quality of life feature would help focusing on specific objects during design. I don't know yet if this will be saved or not.\n    - **Some layout fixes.** Updating the framework used to make Wav2Bar, Electron, introduced some quirks in the UI. It is also the opportunity to fix very small issues like the fact that the top audio controls take a lot of space. That make the screen less easily visible completely.\n    - **Display object borders on hovering of its settings.** It is not always easy to see the boundaries of an object (like particle flow objects), which doesn't help setting its size. This feature aim to fix this.\n- **0.3.1**\n    - **convert CLI command.** This quick command would convert the save to a newer said version. I also consider a potential folder support to make migrations easier if you like to keep up to date saves.\n    - **Keep track of last used folder in file explorer.** Because always starting from home folder and doing all the clicks again is annoying!\n- **0.4.0**\n    - **Continue internal refactoring, but less.** Some last changes have to be made in objects property handling so the rest listed below is easier to do.\n    - **New visualizers.** Yes. Finally. Two would be a great goal to start with. I need to experiment stuff.\n    - **Extend existing objects customization.** That includes more options for text and particle flows.\n- **0.4.1**\n    - **favorite folders in file explorer.** This can act as shortcuts.\n- **Box of ideas for the future (i.e possible but not confirmed)**\n    - full CLI with dedicated terminal and script reading\n    - more particle options\n    - gradient UI\n    - custom color picker\n    - more visualizers\n    - better linux support (once I find the good moment to setup a Linux dev environment)\n    - keyboard shortcuts\n    - mouse interactions to manipulate objects\n    - translations\n    - helper to make cool designs by picking between choices.\n    - factory templates\n    - More accurate preview (time based instead of frame based)\n\n## Cool, when does it come ?\n\nAs always, because I am the only maintainer and developer of Wav2Bar, and as this is done on my free time, this depends of multiple factors. That includes workload given by the university, my physical health (wrists specifically if you are familiar with RSI), and the rest of life. I am doing my best to push this project forward and satisfy requests, but I also need to find balance with life, that goes without saying.\n\n## Contribution\n\nI will be preparing a CONTRIBUTING.md file on GitHub soon primarily for documentation on the project, but also to get something if someone would ever be interested to contribute. If it is your case, please contact me at picorims.contact@gmail.com so we can discuss the topic (in the current state it is not ready for that, in terms of git branches).\n\nThat's it for today's devlog, stay tuned!\n\n~ Picorims","source":"_posts/devlog-september-2021.md","raw":"---\ntitle: Devlog - September 2021\ncategories:\n- news\n- devlogs\ndate: 2021-09-25 23:21:51\nupdated: 2021-09-25 23:44:26\ntags:\n- news\n- beta\n- devlog\nthumbnail: thumbnail-devlog-september-2021.png\n---\n\nHi!\n\nI have been quite silent since Wav2Bar 0.2.0 release on July. I think now is a good opportunity to let you know how things are going, as well as giving plans for the next month. Let's get started!\n\n## On going and planned updates\n\n### Wav2Bar 0.3.0 development\n\nWav2Bar 0.3.0 development Started in early August. This update is mostly a technical update, and thus for many reasons.\n\nIn the current implementation, each object has its own independent setup. That means that every time a change has to be made, it has to be repeated for every objects, which is very time consuming. Right now there are six available objects, so common changes and bug fixes have to be made six times. Let's be honest, this is absolutely not sustainable on the long term. That's why some heavy refactoring is being made in the background since August.\n\nThat said refactoring has been almost finished this week. So I would say add that one third of the update has been completed. I know this is taking a lot of times, but this is necessary to be able to implement new visualizers. So what else has to be made?\n\n### Roadmap\n\nHere is a roadmap of the future updates and planned features. This roadmap is absolutely not set in stone, and is subject to changes if needed as the times goes. But this should give you a good picture of what direction development is taking.\n\n- **0.3.0**\n    - **Write converter to new save format.** With the heavy refactoring, the inner structure of saves has changed quite a lot. So there is some work to do so support older saves.\n    - **Fix 0.2.2 issue where opening a new project doesn't clean up old objects' interface.**\n    - **Hide/show object feature.** This quality of life feature would help focusing on specific objects during design. I don't know yet if this will be saved or not.\n    - **Some layout fixes.** Updating the framework used to make Wav2Bar, Electron, introduced some quirks in the UI. It is also the opportunity to fix very small issues like the fact that the top audio controls take a lot of space. That make the screen less easily visible completely.\n    - **Display object borders on hovering of its settings.** It is not always easy to see the boundaries of an object (like particle flow objects), which doesn't help setting its size. This feature aim to fix this.\n- **0.3.1**\n    - **convert CLI command.** This quick command would convert the save to a newer said version. I also consider a potential folder support to make migrations easier if you like to keep up to date saves.\n    - **Keep track of last used folder in file explorer.** Because always starting from home folder and doing all the clicks again is annoying!\n- **0.4.0**\n    - **Continue internal refactoring, but less.** Some last changes have to be made in objects property handling so the rest listed below is easier to do.\n    - **New visualizers.** Yes. Finally. Two would be a great goal to start with. I need to experiment stuff.\n    - **Extend existing objects customization.** That includes more options for text and particle flows.\n- **0.4.1**\n    - **favorite folders in file explorer.** This can act as shortcuts.\n- **Box of ideas for the future (i.e possible but not confirmed)**\n    - full CLI with dedicated terminal and script reading\n    - more particle options\n    - gradient UI\n    - custom color picker\n    - more visualizers\n    - better linux support (once I find the good moment to setup a Linux dev environment)\n    - keyboard shortcuts\n    - mouse interactions to manipulate objects\n    - translations\n    - helper to make cool designs by picking between choices.\n    - factory templates\n    - More accurate preview (time based instead of frame based)\n\n## Cool, when does it come ?\n\nAs always, because I am the only maintainer and developer of Wav2Bar, and as this is done on my free time, this depends of multiple factors. That includes workload given by the university, my physical health (wrists specifically if you are familiar with RSI), and the rest of life. I am doing my best to push this project forward and satisfy requests, but I also need to find balance with life, that goes without saying.\n\n## Contribution\n\nI will be preparing a CONTRIBUTING.md file on GitHub soon primarily for documentation on the project, but also to get something if someone would ever be interested to contribute. If it is your case, please contact me at picorims.contact@gmail.com so we can discuss the topic (in the current state it is not ready for that, in terms of git branches).\n\nThat's it for today's devlog, stay tuned!\n\n~ Picorims","slug":"devlog-september-2021","published":1,"_id":"cku0bbxdf000rvsun649d91lt","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Hi!</p>\n<p>I have been quite silent since Wav2Bar 0.2.0 release on July. I think now is a good opportunity to let you know how things are going, as well as giving plans for the next month. Let’s get started!</p>\n<h2 id=\"On-going-and-planned-updates\"><a href=\"#On-going-and-planned-updates\" class=\"headerlink\" title=\"On going and planned updates\"></a>On going and planned updates</h2><h3 id=\"Wav2Bar-0-3-0-development\"><a href=\"#Wav2Bar-0-3-0-development\" class=\"headerlink\" title=\"Wav2Bar 0.3.0 development\"></a>Wav2Bar 0.3.0 development</h3><p>Wav2Bar 0.3.0 development Started in early August. This update is mostly a technical update, and thus for many reasons.</p>\n<p>In the current implementation, each object has its own independent setup. That means that every time a change has to be made, it has to be repeated for every objects, which is very time consuming. Right now there are six available objects, so common changes and bug fixes have to be made six times. Let’s be honest, this is absolutely not sustainable on the long term. That’s why some heavy refactoring is being made in the background since August.</p>\n<p>That said refactoring has been almost finished this week. So I would say add that one third of the update has been completed. I know this is taking a lot of times, but this is necessary to be able to implement new visualizers. So what else has to be made?</p>\n<h3 id=\"Roadmap\"><a href=\"#Roadmap\" class=\"headerlink\" title=\"Roadmap\"></a>Roadmap</h3><p>Here is a roadmap of the future updates and planned features. This roadmap is absolutely not set in stone, and is subject to changes if needed as the times goes. But this should give you a good picture of what direction development is taking.</p>\n<ul>\n<li><strong>0.3.0</strong><ul>\n<li><strong>Write converter to new save format.</strong> With the heavy refactoring, the inner structure of saves has changed quite a lot. So there is some work to do so support older saves.</li>\n<li><strong>Fix 0.2.2 issue where opening a new project doesn’t clean up old objects’ interface.</strong></li>\n<li><strong>Hide/show object feature.</strong> This quality of life feature would help focusing on specific objects during design. I don’t know yet if this will be saved or not.</li>\n<li><strong>Some layout fixes.</strong> Updating the framework used to make Wav2Bar, Electron, introduced some quirks in the UI. It is also the opportunity to fix very small issues like the fact that the top audio controls take a lot of space. That make the screen less easily visible completely.</li>\n<li><strong>Display object borders on hovering of its settings.</strong> It is not always easy to see the boundaries of an object (like particle flow objects), which doesn’t help setting its size. This feature aim to fix this.</li>\n</ul>\n</li>\n<li><strong>0.3.1</strong><ul>\n<li><strong>convert CLI command.</strong> This quick command would convert the save to a newer said version. I also consider a potential folder support to make migrations easier if you like to keep up to date saves.</li>\n<li><strong>Keep track of last used folder in file explorer.</strong> Because always starting from home folder and doing all the clicks again is annoying!</li>\n</ul>\n</li>\n<li><strong>0.4.0</strong><ul>\n<li><strong>Continue internal refactoring, but less.</strong> Some last changes have to be made in objects property handling so the rest listed below is easier to do.</li>\n<li><strong>New visualizers.</strong> Yes. Finally. Two would be a great goal to start with. I need to experiment stuff.</li>\n<li><strong>Extend existing objects customization.</strong> That includes more options for text and particle flows.</li>\n</ul>\n</li>\n<li><strong>0.4.1</strong><ul>\n<li><strong>favorite folders in file explorer.</strong> This can act as shortcuts.</li>\n</ul>\n</li>\n<li><strong>Box of ideas for the future (i.e possible but not confirmed)</strong><ul>\n<li>full CLI with dedicated terminal and script reading</li>\n<li>more particle options</li>\n<li>gradient UI</li>\n<li>custom color picker</li>\n<li>more visualizers</li>\n<li>better linux support (once I find the good moment to setup a Linux dev environment)</li>\n<li>keyboard shortcuts</li>\n<li>mouse interactions to manipulate objects</li>\n<li>translations</li>\n<li>helper to make cool designs by picking between choices.</li>\n<li>factory templates</li>\n<li>More accurate preview (time based instead of frame based)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Cool-when-does-it-come\"><a href=\"#Cool-when-does-it-come\" class=\"headerlink\" title=\"Cool, when does it come ?\"></a>Cool, when does it come ?</h2><p>As always, because I am the only maintainer and developer of Wav2Bar, and as this is done on my free time, this depends of multiple factors. That includes workload given by the university, my physical health (wrists specifically if you are familiar with RSI), and the rest of life. I am doing my best to push this project forward and satisfy requests, but I also need to find balance with life, that goes without saying.</p>\n<h2 id=\"Contribution\"><a href=\"#Contribution\" class=\"headerlink\" title=\"Contribution\"></a>Contribution</h2><p>I will be preparing a CONTRIBUTING.md file on GitHub soon primarily for documentation on the project, but also to get something if someone would ever be interested to contribute. If it is your case, please contact me at <a href=\"mailto:&#112;&#x69;&#99;&#x6f;&#114;&#x69;&#x6d;&#x73;&#46;&#99;&#x6f;&#x6e;&#116;&#x61;&#x63;&#116;&#x40;&#x67;&#109;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;\">&#112;&#x69;&#99;&#x6f;&#114;&#x69;&#x6d;&#x73;&#46;&#99;&#x6f;&#x6e;&#116;&#x61;&#x63;&#116;&#x40;&#x67;&#109;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;</a> so we can discuss the topic (in the current state it is not ready for that, in terms of git branches).</p>\n<p>That’s it for today’s devlog, stay tuned!</p>\n<p>~ Picorims</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Hi!</p>\n<p>I have been quite silent since Wav2Bar 0.2.0 release on July. I think now is a good opportunity to let you know how things are going, as well as giving plans for the next month. Let’s get started!</p>\n<h2 id=\"On-going-and-planned-updates\"><a href=\"#On-going-and-planned-updates\" class=\"headerlink\" title=\"On going and planned updates\"></a>On going and planned updates</h2><h3 id=\"Wav2Bar-0-3-0-development\"><a href=\"#Wav2Bar-0-3-0-development\" class=\"headerlink\" title=\"Wav2Bar 0.3.0 development\"></a>Wav2Bar 0.3.0 development</h3><p>Wav2Bar 0.3.0 development Started in early August. This update is mostly a technical update, and thus for many reasons.</p>\n<p>In the current implementation, each object has its own independent setup. That means that every time a change has to be made, it has to be repeated for every objects, which is very time consuming. Right now there are six available objects, so common changes and bug fixes have to be made six times. Let’s be honest, this is absolutely not sustainable on the long term. That’s why some heavy refactoring is being made in the background since August.</p>\n<p>That said refactoring has been almost finished this week. So I would say add that one third of the update has been completed. I know this is taking a lot of times, but this is necessary to be able to implement new visualizers. So what else has to be made?</p>\n<h3 id=\"Roadmap\"><a href=\"#Roadmap\" class=\"headerlink\" title=\"Roadmap\"></a>Roadmap</h3><p>Here is a roadmap of the future updates and planned features. This roadmap is absolutely not set in stone, and is subject to changes if needed as the times goes. But this should give you a good picture of what direction development is taking.</p>\n<ul>\n<li><strong>0.3.0</strong><ul>\n<li><strong>Write converter to new save format.</strong> With the heavy refactoring, the inner structure of saves has changed quite a lot. So there is some work to do so support older saves.</li>\n<li><strong>Fix 0.2.2 issue where opening a new project doesn’t clean up old objects’ interface.</strong></li>\n<li><strong>Hide/show object feature.</strong> This quality of life feature would help focusing on specific objects during design. I don’t know yet if this will be saved or not.</li>\n<li><strong>Some layout fixes.</strong> Updating the framework used to make Wav2Bar, Electron, introduced some quirks in the UI. It is also the opportunity to fix very small issues like the fact that the top audio controls take a lot of space. That make the screen less easily visible completely.</li>\n<li><strong>Display object borders on hovering of its settings.</strong> It is not always easy to see the boundaries of an object (like particle flow objects), which doesn’t help setting its size. This feature aim to fix this.</li>\n</ul>\n</li>\n<li><strong>0.3.1</strong><ul>\n<li><strong>convert CLI command.</strong> This quick command would convert the save to a newer said version. I also consider a potential folder support to make migrations easier if you like to keep up to date saves.</li>\n<li><strong>Keep track of last used folder in file explorer.</strong> Because always starting from home folder and doing all the clicks again is annoying!</li>\n</ul>\n</li>\n<li><strong>0.4.0</strong><ul>\n<li><strong>Continue internal refactoring, but less.</strong> Some last changes have to be made in objects property handling so the rest listed below is easier to do.</li>\n<li><strong>New visualizers.</strong> Yes. Finally. Two would be a great goal to start with. I need to experiment stuff.</li>\n<li><strong>Extend existing objects customization.</strong> That includes more options for text and particle flows.</li>\n</ul>\n</li>\n<li><strong>0.4.1</strong><ul>\n<li><strong>favorite folders in file explorer.</strong> This can act as shortcuts.</li>\n</ul>\n</li>\n<li><strong>Box of ideas for the future (i.e possible but not confirmed)</strong><ul>\n<li>full CLI with dedicated terminal and script reading</li>\n<li>more particle options</li>\n<li>gradient UI</li>\n<li>custom color picker</li>\n<li>more visualizers</li>\n<li>better linux support (once I find the good moment to setup a Linux dev environment)</li>\n<li>keyboard shortcuts</li>\n<li>mouse interactions to manipulate objects</li>\n<li>translations</li>\n<li>helper to make cool designs by picking between choices.</li>\n<li>factory templates</li>\n<li>More accurate preview (time based instead of frame based)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Cool-when-does-it-come\"><a href=\"#Cool-when-does-it-come\" class=\"headerlink\" title=\"Cool, when does it come ?\"></a>Cool, when does it come ?</h2><p>As always, because I am the only maintainer and developer of Wav2Bar, and as this is done on my free time, this depends of multiple factors. That includes workload given by the university, my physical health (wrists specifically if you are familiar with RSI), and the rest of life. I am doing my best to push this project forward and satisfy requests, but I also need to find balance with life, that goes without saying.</p>\n<h2 id=\"Contribution\"><a href=\"#Contribution\" class=\"headerlink\" title=\"Contribution\"></a>Contribution</h2><p>I will be preparing a CONTRIBUTING.md file on GitHub soon primarily for documentation on the project, but also to get something if someone would ever be interested to contribute. If it is your case, please contact me at <a href=\"mailto:&#112;&#x69;&#99;&#x6f;&#114;&#x69;&#x6d;&#x73;&#46;&#99;&#x6f;&#x6e;&#116;&#x61;&#x63;&#116;&#x40;&#x67;&#109;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;\">&#112;&#x69;&#99;&#x6f;&#114;&#x69;&#x6d;&#x73;&#46;&#99;&#x6f;&#x6e;&#116;&#x61;&#x63;&#116;&#x40;&#x67;&#109;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;</a> so we can discuss the topic (in the current state it is not ready for that, in terms of git branches).</p>\n<p>That’s it for today’s devlog, stay tuned!</p>\n<p>~ Picorims</p>\n"},{"title":"Devlog - January 2022","date":"2022-01-16T20:18:04.000Z","updated":"2022-01-16T20:18:04.000Z","thumbnail":"thumbnail-devlog-january-2022.png","_content":"\nHi!\n\nIt has been a while since the last update, so here's a recap of what happened development wise. I will also discuss some\nother topics regarding the near future of Wav2Bar.\n\n## So, where's 0.3.0?\n\nI was initially planning to release Wav2Bar 0.3.0 two weeks ago. It turns out university required my full attention since December. But things calmed down again, and everything I wanted to integrate into 0.3.0 is done. My goal right now is to release it by the next Sunday, hopefully with a Linux .zip file this time. As for .deb and .rpm, I still have issues making them, so I will probably take a look at other supported formats such as flatpak.\n\nI will make a dedicated post for the 0.3.0 update, but I can give you a quick grasp of what's new. First, some bugs from the latest release, such as video export from the command line or UI issues when switching projects have been patched in this version. Some outdated help have also been updated. Otherwise, since it is mostly a techinal update, it is mostly a bunch of small improvements here and there. Overall, I have made small improvements to the user interface layout and responsivity, in particular concerning the audio control part. The particle rendering is now updated when you tweak some settings, even when the audio is paused (for most of the visual options). A random color is picked for objects at creation so they are visible when on top of other objects (especially white objects). You can now also access logs from the settings (useful for bug reporting). Finally, the user interface is now locked behind a loading animation when the software is busy in background and shouldn't be touched.\n\nOn the development side, I made some technical improvements to the development environment, such as adding ESLint and starting to integrate unit tests (I finally found how to integrate unit testing to Electron, after two years!). What it basically mean is more protection against bugs for future releases, as the number of tests grows.\n\n## Updating the license from MIT to GPL\n\n**TL;DR: This change will allow to integrate FFmpeg instead of installing it manually, and it forces reuse of Wav2Bar source code to remain open source.**\n\nFrom day one, Wav2Bar has been licensed under the [MIT license](https://opensource.org/licenses/MIT \"MIT License\"), which is a permissive license. MIT allows pretty much anything as long as the copyright notice is kept.\n\nHowever I encountered an issue when I wanted to integrate FFmpeg to Wav2Bar for installation convenience. FFmpeg is either licensed under [LGPL-2.1](https://opensource.org/licenses/LGPL-2.1 \"GNU Lesser General Public License version 2.1\") or later, or [GPL-2.0](https://opensource.org/licenses/GPL-2.0 \"GNU General Public License version 2\") or later license depending of integrated libraries. To make things simple, GPL is a license encouraging free software, that require any derivative work to also be licensed under GPL. LGPL is a variant which is a bit less restrictive on that, but works more or less the same way. In other words, if I want to directly provide FFmpeg into Wav2Bar packages, I need to comply by the GPL, and license the whole software as GPL. The reason is that Wav2Bar uses libx264 to encode .mp4 videos, and this library is licensed under GPL, so the LGPL can't be used (alternatives like openh264 exists but aren't as performant).\n\nThat is why Wav2Bar will soon be licensed under GPL-3.0 or later. Older versions will remain licensed under MIT, as they have been distributed under MIT, this only affect future releases. The GPL license is a very controversial topic, considering its ability to spread everywhere. However I consider it the best choice right now for the user interest (conveniency for FFmpeg of course, but more broadly user rights). I considered the option to dual license Wav2Bar under both MIT and GPL, with the MIT version not receiving FFmpeg, but this is more trouble that I don't want to handle, considering the limited time I can offer for Wav2Bar development.\n\nThis won't affect your use of Wav2Bar is any way, and the project remain free and open-source as it always has been.\n\n## Future releases: give your feedback!\n\n**I have created a form [here](https://framaforms.org/wav2bar-feedback-16012022-1642357540 \"Give feedback on Wav2Bar\") (full link: https://framaforms.org/wav2bar-feedback-16012022-1642357540) to get feedback about the usability of Wav2Bar and most wanted features. If you have five minutes, I would really appreciate some user input! No personal information is required.**\n\n## GitHub\n\nI may do some changes about how things are organized on GitHub, like launch a GitHub Projects to track progress (I have my own local board, this would be for you, users, to see development progress), or use branches.\n\n## That's it!\n\nThanks for reading! I hope you enjoyed this devlog, and I'll keep you updated when Wav2Bar 0.3.0 is out. For now, have a nice day/evening/night!\n\n~ Picorims","source":"_posts/devlog-january-2022.md","raw":"---\ntitle: Devlog - January 2022\ncategories:\n- news\n- devlogs\ndate: 2022-01-16 21:18:04\nupdated: 2022-01-16 21:18:04\ntags:\n- news\n- beta\n- devlog\nthumbnail: thumbnail-devlog-january-2022.png\n---\n\nHi!\n\nIt has been a while since the last update, so here's a recap of what happened development wise. I will also discuss some\nother topics regarding the near future of Wav2Bar.\n\n## So, where's 0.3.0?\n\nI was initially planning to release Wav2Bar 0.3.0 two weeks ago. It turns out university required my full attention since December. But things calmed down again, and everything I wanted to integrate into 0.3.0 is done. My goal right now is to release it by the next Sunday, hopefully with a Linux .zip file this time. As for .deb and .rpm, I still have issues making them, so I will probably take a look at other supported formats such as flatpak.\n\nI will make a dedicated post for the 0.3.0 update, but I can give you a quick grasp of what's new. First, some bugs from the latest release, such as video export from the command line or UI issues when switching projects have been patched in this version. Some outdated help have also been updated. Otherwise, since it is mostly a techinal update, it is mostly a bunch of small improvements here and there. Overall, I have made small improvements to the user interface layout and responsivity, in particular concerning the audio control part. The particle rendering is now updated when you tweak some settings, even when the audio is paused (for most of the visual options). A random color is picked for objects at creation so they are visible when on top of other objects (especially white objects). You can now also access logs from the settings (useful for bug reporting). Finally, the user interface is now locked behind a loading animation when the software is busy in background and shouldn't be touched.\n\nOn the development side, I made some technical improvements to the development environment, such as adding ESLint and starting to integrate unit tests (I finally found how to integrate unit testing to Electron, after two years!). What it basically mean is more protection against bugs for future releases, as the number of tests grows.\n\n## Updating the license from MIT to GPL\n\n**TL;DR: This change will allow to integrate FFmpeg instead of installing it manually, and it forces reuse of Wav2Bar source code to remain open source.**\n\nFrom day one, Wav2Bar has been licensed under the [MIT license](https://opensource.org/licenses/MIT \"MIT License\"), which is a permissive license. MIT allows pretty much anything as long as the copyright notice is kept.\n\nHowever I encountered an issue when I wanted to integrate FFmpeg to Wav2Bar for installation convenience. FFmpeg is either licensed under [LGPL-2.1](https://opensource.org/licenses/LGPL-2.1 \"GNU Lesser General Public License version 2.1\") or later, or [GPL-2.0](https://opensource.org/licenses/GPL-2.0 \"GNU General Public License version 2\") or later license depending of integrated libraries. To make things simple, GPL is a license encouraging free software, that require any derivative work to also be licensed under GPL. LGPL is a variant which is a bit less restrictive on that, but works more or less the same way. In other words, if I want to directly provide FFmpeg into Wav2Bar packages, I need to comply by the GPL, and license the whole software as GPL. The reason is that Wav2Bar uses libx264 to encode .mp4 videos, and this library is licensed under GPL, so the LGPL can't be used (alternatives like openh264 exists but aren't as performant).\n\nThat is why Wav2Bar will soon be licensed under GPL-3.0 or later. Older versions will remain licensed under MIT, as they have been distributed under MIT, this only affect future releases. The GPL license is a very controversial topic, considering its ability to spread everywhere. However I consider it the best choice right now for the user interest (conveniency for FFmpeg of course, but more broadly user rights). I considered the option to dual license Wav2Bar under both MIT and GPL, with the MIT version not receiving FFmpeg, but this is more trouble that I don't want to handle, considering the limited time I can offer for Wav2Bar development.\n\nThis won't affect your use of Wav2Bar is any way, and the project remain free and open-source as it always has been.\n\n## Future releases: give your feedback!\n\n**I have created a form [here](https://framaforms.org/wav2bar-feedback-16012022-1642357540 \"Give feedback on Wav2Bar\") (full link: https://framaforms.org/wav2bar-feedback-16012022-1642357540) to get feedback about the usability of Wav2Bar and most wanted features. If you have five minutes, I would really appreciate some user input! No personal information is required.**\n\n## GitHub\n\nI may do some changes about how things are organized on GitHub, like launch a GitHub Projects to track progress (I have my own local board, this would be for you, users, to see development progress), or use branches.\n\n## That's it!\n\nThanks for reading! I hope you enjoyed this devlog, and I'll keep you updated when Wav2Bar 0.3.0 is out. For now, have a nice day/evening/night!\n\n~ Picorims","slug":"devlog-january-2022","published":1,"_id":"ckyhp61pe0000csun90qxhkl1","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Hi!</p>\n<p>It has been a while since the last update, so here’s a recap of what happened development wise. I will also discuss some<br>other topics regarding the near future of Wav2Bar.</p>\n<h2 id=\"So-where’s-0-3-0\"><a href=\"#So-where’s-0-3-0\" class=\"headerlink\" title=\"So, where’s 0.3.0?\"></a>So, where’s 0.3.0?</h2><p>I was initially planning to release Wav2Bar 0.3.0 two weeks ago. It turns out university required my full attention since December. But things calmed down again, and everything I wanted to integrate into 0.3.0 is done. My goal right now is to release it by the next Sunday, hopefully with a Linux .zip file this time. As for .deb and .rpm, I still have issues making them, so I will probably take a look at other supported formats such as flatpak.</p>\n<p>I will make a dedicated post for the 0.3.0 update, but I can give you a quick grasp of what’s new. First, some bugs from the latest release, such as video export from the command line or UI issues when switching projects have been patched in this version. Some outdated help have also been updated. Otherwise, since it is mostly a techinal update, it is mostly a bunch of small improvements here and there. Overall, I have made small improvements to the user interface layout and responsivity, in particular concerning the audio control part. The particle rendering is now updated when you tweak some settings, even when the audio is paused (for most of the visual options). A random color is picked for objects at creation so they are visible when on top of other objects (especially white objects). You can now also access logs from the settings (useful for bug reporting). Finally, the user interface is now locked behind a loading animation when the software is busy in background and shouldn’t be touched.</p>\n<p>On the development side, I made some technical improvements to the development environment, such as adding ESLint and starting to integrate unit tests (I finally found how to integrate unit testing to Electron, after two years!). What it basically mean is more protection against bugs for future releases, as the number of tests grows.</p>\n<h2 id=\"Updating-the-license-from-MIT-to-GPL\"><a href=\"#Updating-the-license-from-MIT-to-GPL\" class=\"headerlink\" title=\"Updating the license from MIT to GPL\"></a>Updating the license from MIT to GPL</h2><p><strong>TL;DR: This change will allow to integrate FFmpeg instead of installing it manually, and it forces reuse of Wav2Bar source code to remain open source.</strong></p>\n<p>From day one, Wav2Bar has been licensed under the <a href=\"https://opensource.org/licenses/MIT\" title=\"MIT License\">MIT license</a>, which is a permissive license. MIT allows pretty much anything as long as the copyright notice is kept.</p>\n<p>However I encountered an issue when I wanted to integrate FFmpeg to Wav2Bar for installation convenience. FFmpeg is either licensed under <a href=\"https://opensource.org/licenses/LGPL-2.1\" title=\"GNU Lesser General Public License version 2.1\">LGPL-2.1</a> or later, or <a href=\"https://opensource.org/licenses/GPL-2.0\" title=\"GNU General Public License version 2\">GPL-2.0</a> or later license depending of integrated libraries. To make things simple, GPL is a license encouraging free software, that require any derivative work to also be licensed under GPL. LGPL is a variant which is a bit less restrictive on that, but works more or less the same way. In other words, if I want to directly provide FFmpeg into Wav2Bar packages, I need to comply by the GPL, and license the whole software as GPL. The reason is that Wav2Bar uses libx264 to encode .mp4 videos, and this library is licensed under GPL, so the LGPL can’t be used (alternatives like openh264 exists but aren’t as performant).</p>\n<p>That is why Wav2Bar will soon be licensed under GPL-3.0 or later. Older versions will remain licensed under MIT, as they have been distributed under MIT, this only affect future releases. The GPL license is a very controversial topic, considering its ability to spread everywhere. However I consider it the best choice right now for the user interest (conveniency for FFmpeg of course, but more broadly user rights). I considered the option to dual license Wav2Bar under both MIT and GPL, with the MIT version not receiving FFmpeg, but this is more trouble that I don’t want to handle, considering the limited time I can offer for Wav2Bar development.</p>\n<p>This won’t affect your use of Wav2Bar is any way, and the project remain free and open-source as it always has been.</p>\n<h2 id=\"Future-releases-give-your-feedback\"><a href=\"#Future-releases-give-your-feedback\" class=\"headerlink\" title=\"Future releases: give your feedback!\"></a>Future releases: give your feedback!</h2><p><strong>I have created a form <a href=\"https://framaforms.org/wav2bar-feedback-16012022-1642357540\" title=\"Give feedback on Wav2Bar\">here</a> (full link: <a href=\"https://framaforms.org/wav2bar-feedback-16012022-1642357540\">https://framaforms.org/wav2bar-feedback-16012022-1642357540</a>) to get feedback about the usability of Wav2Bar and most wanted features. If you have five minutes, I would really appreciate some user input! No personal information is required.</strong></p>\n<h2 id=\"GitHub\"><a href=\"#GitHub\" class=\"headerlink\" title=\"GitHub\"></a>GitHub</h2><p>I may do some changes about how things are organized on GitHub, like launch a GitHub Projects to track progress (I have my own local board, this would be for you, users, to see development progress), or use branches.</p>\n<h2 id=\"That’s-it\"><a href=\"#That’s-it\" class=\"headerlink\" title=\"That’s it!\"></a>That’s it!</h2><p>Thanks for reading! I hope you enjoyed this devlog, and I’ll keep you updated when Wav2Bar 0.3.0 is out. For now, have a nice day/evening/night!</p>\n<p>~ Picorims</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Hi!</p>\n<p>It has been a while since the last update, so here’s a recap of what happened development wise. I will also discuss some<br>other topics regarding the near future of Wav2Bar.</p>\n<h2 id=\"So-where’s-0-3-0\"><a href=\"#So-where’s-0-3-0\" class=\"headerlink\" title=\"So, where’s 0.3.0?\"></a>So, where’s 0.3.0?</h2><p>I was initially planning to release Wav2Bar 0.3.0 two weeks ago. It turns out university required my full attention since December. But things calmed down again, and everything I wanted to integrate into 0.3.0 is done. My goal right now is to release it by the next Sunday, hopefully with a Linux .zip file this time. As for .deb and .rpm, I still have issues making them, so I will probably take a look at other supported formats such as flatpak.</p>\n<p>I will make a dedicated post for the 0.3.0 update, but I can give you a quick grasp of what’s new. First, some bugs from the latest release, such as video export from the command line or UI issues when switching projects have been patched in this version. Some outdated help have also been updated. Otherwise, since it is mostly a techinal update, it is mostly a bunch of small improvements here and there. Overall, I have made small improvements to the user interface layout and responsivity, in particular concerning the audio control part. The particle rendering is now updated when you tweak some settings, even when the audio is paused (for most of the visual options). A random color is picked for objects at creation so they are visible when on top of other objects (especially white objects). You can now also access logs from the settings (useful for bug reporting). Finally, the user interface is now locked behind a loading animation when the software is busy in background and shouldn’t be touched.</p>\n<p>On the development side, I made some technical improvements to the development environment, such as adding ESLint and starting to integrate unit tests (I finally found how to integrate unit testing to Electron, after two years!). What it basically mean is more protection against bugs for future releases, as the number of tests grows.</p>\n<h2 id=\"Updating-the-license-from-MIT-to-GPL\"><a href=\"#Updating-the-license-from-MIT-to-GPL\" class=\"headerlink\" title=\"Updating the license from MIT to GPL\"></a>Updating the license from MIT to GPL</h2><p><strong>TL;DR: This change will allow to integrate FFmpeg instead of installing it manually, and it forces reuse of Wav2Bar source code to remain open source.</strong></p>\n<p>From day one, Wav2Bar has been licensed under the <a href=\"https://opensource.org/licenses/MIT\" title=\"MIT License\">MIT license</a>, which is a permissive license. MIT allows pretty much anything as long as the copyright notice is kept.</p>\n<p>However I encountered an issue when I wanted to integrate FFmpeg to Wav2Bar for installation convenience. FFmpeg is either licensed under <a href=\"https://opensource.org/licenses/LGPL-2.1\" title=\"GNU Lesser General Public License version 2.1\">LGPL-2.1</a> or later, or <a href=\"https://opensource.org/licenses/GPL-2.0\" title=\"GNU General Public License version 2\">GPL-2.0</a> or later license depending of integrated libraries. To make things simple, GPL is a license encouraging free software, that require any derivative work to also be licensed under GPL. LGPL is a variant which is a bit less restrictive on that, but works more or less the same way. In other words, if I want to directly provide FFmpeg into Wav2Bar packages, I need to comply by the GPL, and license the whole software as GPL. The reason is that Wav2Bar uses libx264 to encode .mp4 videos, and this library is licensed under GPL, so the LGPL can’t be used (alternatives like openh264 exists but aren’t as performant).</p>\n<p>That is why Wav2Bar will soon be licensed under GPL-3.0 or later. Older versions will remain licensed under MIT, as they have been distributed under MIT, this only affect future releases. The GPL license is a very controversial topic, considering its ability to spread everywhere. However I consider it the best choice right now for the user interest (conveniency for FFmpeg of course, but more broadly user rights). I considered the option to dual license Wav2Bar under both MIT and GPL, with the MIT version not receiving FFmpeg, but this is more trouble that I don’t want to handle, considering the limited time I can offer for Wav2Bar development.</p>\n<p>This won’t affect your use of Wav2Bar is any way, and the project remain free and open-source as it always has been.</p>\n<h2 id=\"Future-releases-give-your-feedback\"><a href=\"#Future-releases-give-your-feedback\" class=\"headerlink\" title=\"Future releases: give your feedback!\"></a>Future releases: give your feedback!</h2><p><strong>I have created a form <a href=\"https://framaforms.org/wav2bar-feedback-16012022-1642357540\" title=\"Give feedback on Wav2Bar\">here</a> (full link: <a href=\"https://framaforms.org/wav2bar-feedback-16012022-1642357540\">https://framaforms.org/wav2bar-feedback-16012022-1642357540</a>) to get feedback about the usability of Wav2Bar and most wanted features. If you have five minutes, I would really appreciate some user input! No personal information is required.</strong></p>\n<h2 id=\"GitHub\"><a href=\"#GitHub\" class=\"headerlink\" title=\"GitHub\"></a>GitHub</h2><p>I may do some changes about how things are organized on GitHub, like launch a GitHub Projects to track progress (I have my own local board, this would be for you, users, to see development progress), or use branches.</p>\n<h2 id=\"That’s-it\"><a href=\"#That’s-it\" class=\"headerlink\" title=\"That’s it!\"></a>That’s it!</h2><p>Thanks for reading! I hope you enjoyed this devlog, and I’ll keep you updated when Wav2Bar 0.3.0 is out. For now, have a nice day/evening/night!</p>\n<p>~ Picorims</p>\n"},{"title":"Introducing Wav2Bar Beta 0.3.0","date":"2022-01-21T16:19:38.000Z","updated":"2022-02-03T15:29:42.389Z","thumbnail":"2022-01-20_beta-0-3.png","_content":"\nHi!\n\nHere's a quick tour around what's new with Wav2Bar 0.3.0. This update is mostly a technical update preparing the addition of new visual objects, but it also includes many small improvements.\n\nIf you would like to give some inputs about future updates, then you might be interested by [this form](https://framaforms.org/wav2bar-feedback-16012022-1642357540 \"Wav2Bar Feedback form\").\n\n## Visual objects\n\n### Particle flows\n\nThe particle flow visual object received some upgrades. When the audio is not playing, some options will still trigger a visual update, to see how these settings affect the overall look of the particles. Also, if you feel the need to, particle flow containers can now be rotated.\n\n### Timers\n\nTimers are now positioned differently. When upgrading from an older save, the adjustments will be done automatically.\n\n### Background\n\nThe background visual object has been removed. It was duplicating the visual object for images and shapes while just having less features (like moving or scaling the background for a better fit). When upgrading an old save, all background objects will be converted to image/shape objects, without any visual changes.\n\n### Other\n\nThe default color of objects is now randomized at creation. This makes it less ambiguous when the object is created on another. Before, as all objects were white by default, you wouldn't notice easily that it was added. Now, unless you just have no luck, colors will be different.\n\n{% asset_img 2022-01-20_beta-0-3_random_color.png Objects with randomized colors %}\n\nSome default values have also been changed for newly created objects.\n\n## User interface\n\n### Responsiveness\n\nSome adjustments have been made to the user interface to make it more responsive in general. When big tasks are happening in the background, a loading screen is now displayed to lock the user interface\n\n{% asset_img 2022-01-20_beta-0-3_loading.png The loading screen indicator %}\n\nMoreover, the audio control panel and the user interface at the top of the screen in general had problematic issues (to the left). It would not react well to small windows. The buttons are now smaller, and the audio group has been split in two to overcome that (to the right).\n\n{% asset_img 2022-01-20_beta-0-3_top_ui.png The user interface at the top is more responsive %}\n\nFinally, the user interface should also be more responsive when resizing the window. \n\n### Visual objects\n\nChanging an object's name is now done using a dedicated field in the rack (to the right), instead of going through a modal window (to the left).\n\n{% asset_img 2022-01-20_beta-0-3_rename.png Renaming an object %}\n\nAdditionally, irrelevant options (i.e that have no effect) in some objects are no longer available (timers, visualizers). In consequence they are no longer stored as well with these objects. This should remove some confusion on usage.\n\n### Other improvements\n\nThe help have been improved and updated, especially for saves and object creation. The logs folder is now directly accessible from the settings tab.\n\n## Technical changes and performance improvements\n\nThe main reason the 0.3.0 update is a technical update is that the way saves and visual objects are changed have been drastically changed (if not rewritten). This makes it much easier to maintain visual objects in the long term, especially for bug fixing and general improvements. Although it is still not perfect and has still problematic flaws (such as with user interface interactions), it will make it easier to add new features and visual objects with the minimum of required code.\n\nDuring this process, I took the opportunity to improve performances on some visual objects. In particular, Particle flows should run better when a big ammount of particle is simulated. Otherwise, changing some parameters on bar visualizers should create less lag. While the first change may affect the export speed (I have not tested however), the second one only affects the edition phase. In such situation, the user interface will be more responsive as a result.\n\n## License\nThe license has been changed from MIT to GPL-3.0-or-later. For more information, see the [January 2022 devlog](https://picorims.github.io/wav2bar-blog/public/2022/01/16/devlog-january-2022/ \"Devlog January 2022\").\n\n## Fixes\n\nThis update also fixes numerous issues that appeared in 0.1.x and 0.2.x updates.\n\n- **Visual objects**\n    - Changing the color of a waves visualizer while audio is paused now updates the color visually. Same for particle flows.\n    - Particle flow's flow type parameter provides help again.\n- **Command Line Interface**\n    - Video export via CLI works again.\n- **User interface**\n    - When opening a new save, existing user interface from old visual objects are now effectively removed.\n    - Interacting with control panel's top tabs no longer moves the rest of the user interface.\n    - The top of the screen was hard to see, and hidden no matter what behind the top user interface (in some zoom and window size scenarios). There is now a minimum of padding above the screen.\n    - The window no longer flashes to white when being first opened.\n    - About section no longer have the text centered.\n\n## Security\n\nElectron has been updated from v12 to v16 and dependencies have been updated as well.\n\n## Linux packages\n\nWav2Bar is now available for Linux as a .zip file (compiled from Ubuntu). I am still having issues creating .deb and .rpm packages. Thus for the next update I will take a look at .flatpak, with the aim to cover more Linux distributions. If you encounter issues while using Wav2Bar on Linux, you can report bugs directly on the GitHub repository.\n\n## 0.3.x\n\nIf any bug is found, it will be addressed in a small update. Otherwise, before going straight into new features, I will make a small update to continue improving the user interface (especially the project tab that is awful) and try to integrate ffmpeg directly into Wav2Bar packages.\n\n## Yes, it took a while\n\nI know this update took a long time to be released. The refactoring was much deeper than I anticipated. In addition, university work required me to delay the release of this update. I am aware this can be annoying, especially when bugs goes in the way of your workflow. These are the flows that comes with it being a side project...\n\nAnyways, I hope you will enjoy this update, and I see you for the next one!\n\n~ Picorims","source":"_posts/beta-0-3-presentation.md","raw":"---\ntitle: Introducing Wav2Bar Beta 0.3.0\ncategories:\n- news\n- releases\ndate: 2022-01-21 17:19:38\nupdated:\ntags:\n- news\n- beta\n- release\nthumbnail: 2022-01-20_beta-0-3.png\n---\n\nHi!\n\nHere's a quick tour around what's new with Wav2Bar 0.3.0. This update is mostly a technical update preparing the addition of new visual objects, but it also includes many small improvements.\n\nIf you would like to give some inputs about future updates, then you might be interested by [this form](https://framaforms.org/wav2bar-feedback-16012022-1642357540 \"Wav2Bar Feedback form\").\n\n## Visual objects\n\n### Particle flows\n\nThe particle flow visual object received some upgrades. When the audio is not playing, some options will still trigger a visual update, to see how these settings affect the overall look of the particles. Also, if you feel the need to, particle flow containers can now be rotated.\n\n### Timers\n\nTimers are now positioned differently. When upgrading from an older save, the adjustments will be done automatically.\n\n### Background\n\nThe background visual object has been removed. It was duplicating the visual object for images and shapes while just having less features (like moving or scaling the background for a better fit). When upgrading an old save, all background objects will be converted to image/shape objects, without any visual changes.\n\n### Other\n\nThe default color of objects is now randomized at creation. This makes it less ambiguous when the object is created on another. Before, as all objects were white by default, you wouldn't notice easily that it was added. Now, unless you just have no luck, colors will be different.\n\n{% asset_img 2022-01-20_beta-0-3_random_color.png Objects with randomized colors %}\n\nSome default values have also been changed for newly created objects.\n\n## User interface\n\n### Responsiveness\n\nSome adjustments have been made to the user interface to make it more responsive in general. When big tasks are happening in the background, a loading screen is now displayed to lock the user interface\n\n{% asset_img 2022-01-20_beta-0-3_loading.png The loading screen indicator %}\n\nMoreover, the audio control panel and the user interface at the top of the screen in general had problematic issues (to the left). It would not react well to small windows. The buttons are now smaller, and the audio group has been split in two to overcome that (to the right).\n\n{% asset_img 2022-01-20_beta-0-3_top_ui.png The user interface at the top is more responsive %}\n\nFinally, the user interface should also be more responsive when resizing the window. \n\n### Visual objects\n\nChanging an object's name is now done using a dedicated field in the rack (to the right), instead of going through a modal window (to the left).\n\n{% asset_img 2022-01-20_beta-0-3_rename.png Renaming an object %}\n\nAdditionally, irrelevant options (i.e that have no effect) in some objects are no longer available (timers, visualizers). In consequence they are no longer stored as well with these objects. This should remove some confusion on usage.\n\n### Other improvements\n\nThe help have been improved and updated, especially for saves and object creation. The logs folder is now directly accessible from the settings tab.\n\n## Technical changes and performance improvements\n\nThe main reason the 0.3.0 update is a technical update is that the way saves and visual objects are changed have been drastically changed (if not rewritten). This makes it much easier to maintain visual objects in the long term, especially for bug fixing and general improvements. Although it is still not perfect and has still problematic flaws (such as with user interface interactions), it will make it easier to add new features and visual objects with the minimum of required code.\n\nDuring this process, I took the opportunity to improve performances on some visual objects. In particular, Particle flows should run better when a big ammount of particle is simulated. Otherwise, changing some parameters on bar visualizers should create less lag. While the first change may affect the export speed (I have not tested however), the second one only affects the edition phase. In such situation, the user interface will be more responsive as a result.\n\n## License\nThe license has been changed from MIT to GPL-3.0-or-later. For more information, see the [January 2022 devlog](https://picorims.github.io/wav2bar-blog/public/2022/01/16/devlog-january-2022/ \"Devlog January 2022\").\n\n## Fixes\n\nThis update also fixes numerous issues that appeared in 0.1.x and 0.2.x updates.\n\n- **Visual objects**\n    - Changing the color of a waves visualizer while audio is paused now updates the color visually. Same for particle flows.\n    - Particle flow's flow type parameter provides help again.\n- **Command Line Interface**\n    - Video export via CLI works again.\n- **User interface**\n    - When opening a new save, existing user interface from old visual objects are now effectively removed.\n    - Interacting with control panel's top tabs no longer moves the rest of the user interface.\n    - The top of the screen was hard to see, and hidden no matter what behind the top user interface (in some zoom and window size scenarios). There is now a minimum of padding above the screen.\n    - The window no longer flashes to white when being first opened.\n    - About section no longer have the text centered.\n\n## Security\n\nElectron has been updated from v12 to v16 and dependencies have been updated as well.\n\n## Linux packages\n\nWav2Bar is now available for Linux as a .zip file (compiled from Ubuntu). I am still having issues creating .deb and .rpm packages. Thus for the next update I will take a look at .flatpak, with the aim to cover more Linux distributions. If you encounter issues while using Wav2Bar on Linux, you can report bugs directly on the GitHub repository.\n\n## 0.3.x\n\nIf any bug is found, it will be addressed in a small update. Otherwise, before going straight into new features, I will make a small update to continue improving the user interface (especially the project tab that is awful) and try to integrate ffmpeg directly into Wav2Bar packages.\n\n## Yes, it took a while\n\nI know this update took a long time to be released. The refactoring was much deeper than I anticipated. In addition, university work required me to delay the release of this update. I am aware this can be annoying, especially when bugs goes in the way of your workflow. These are the flows that comes with it being a side project...\n\nAnyways, I hope you will enjoy this update, and I see you for the next one!\n\n~ Picorims","slug":"beta-0-3-presentation","published":1,"_id":"ckyni0mgj0000rwun2hog92yf","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Hi!</p>\n<p>Here’s a quick tour around what’s new with Wav2Bar 0.3.0. This update is mostly a technical update preparing the addition of new visual objects, but it also includes many small improvements.</p>\n<p>If you would like to give some inputs about future updates, then you might be interested by <a href=\"https://framaforms.org/wav2bar-feedback-16012022-1642357540\" title=\"Wav2Bar Feedback form\">this form</a>.</p>\n<h2 id=\"Visual-objects\"><a href=\"#Visual-objects\" class=\"headerlink\" title=\"Visual objects\"></a>Visual objects</h2><h3 id=\"Particle-flows\"><a href=\"#Particle-flows\" class=\"headerlink\" title=\"Particle flows\"></a>Particle flows</h3><p>The particle flow visual object received some upgrades. When the audio is not playing, some options will still trigger a visual update, to see how these settings affect the overall look of the particles. Also, if you feel the need to, particle flow containers can now be rotated.</p>\n<h3 id=\"Timers\"><a href=\"#Timers\" class=\"headerlink\" title=\"Timers\"></a>Timers</h3><p>Timers are now positioned differently. When upgrading from an older save, the adjustments will be done automatically.</p>\n<h3 id=\"Background\"><a href=\"#Background\" class=\"headerlink\" title=\"Background\"></a>Background</h3><p>The background visual object has been removed. It was duplicating the visual object for images and shapes while just having less features (like moving or scaling the background for a better fit). When upgrading an old save, all background objects will be converted to image/shape objects, without any visual changes.</p>\n<h3 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h3><p>The default color of objects is now randomized at creation. This makes it less ambiguous when the object is created on another. Before, as all objects were white by default, you wouldn’t notice easily that it was added. Now, unless you just have no luck, colors will be different.</p>\n<img src=\"/wav2bar-blog/public/2022/01/21/beta-0-3-presentation/2022-01-20_beta-0-3_random_color.png\" class=\"\" title=\"Objects with randomized colors\">\n\n<p>Some default values have also been changed for newly created objects.</p>\n<h2 id=\"User-interface\"><a href=\"#User-interface\" class=\"headerlink\" title=\"User interface\"></a>User interface</h2><h3 id=\"Responsiveness\"><a href=\"#Responsiveness\" class=\"headerlink\" title=\"Responsiveness\"></a>Responsiveness</h3><p>Some adjustments have been made to the user interface to make it more responsive in general. When big tasks are happening in the background, a loading screen is now displayed to lock the user interface</p>\n<img src=\"/wav2bar-blog/public/2022/01/21/beta-0-3-presentation/2022-01-20_beta-0-3_loading.png\" class=\"\" title=\"The loading screen indicator\">\n\n<p>Moreover, the audio control panel and the user interface at the top of the screen in general had problematic issues (to the left). It would not react well to small windows. The buttons are now smaller, and the audio group has been split in two to overcome that (to the right).</p>\n<img src=\"/wav2bar-blog/public/2022/01/21/beta-0-3-presentation/2022-01-20_beta-0-3_top_ui.png\" class=\"\" title=\"The user interface at the top is more responsive\">\n\n<p>Finally, the user interface should also be more responsive when resizing the window. </p>\n<h3 id=\"Visual-objects-1\"><a href=\"#Visual-objects-1\" class=\"headerlink\" title=\"Visual objects\"></a>Visual objects</h3><p>Changing an object’s name is now done using a dedicated field in the rack (to the right), instead of going through a modal window (to the left).</p>\n<img src=\"/wav2bar-blog/public/2022/01/21/beta-0-3-presentation/2022-01-20_beta-0-3_rename.png\" class=\"\" title=\"Renaming an object\">\n\n<p>Additionally, irrelevant options (i.e that have no effect) in some objects are no longer available (timers, visualizers). In consequence they are no longer stored as well with these objects. This should remove some confusion on usage.</p>\n<h3 id=\"Other-improvements\"><a href=\"#Other-improvements\" class=\"headerlink\" title=\"Other improvements\"></a>Other improvements</h3><p>The help have been improved and updated, especially for saves and object creation. The logs folder is now directly accessible from the settings tab.</p>\n<h2 id=\"Technical-changes-and-performance-improvements\"><a href=\"#Technical-changes-and-performance-improvements\" class=\"headerlink\" title=\"Technical changes and performance improvements\"></a>Technical changes and performance improvements</h2><p>The main reason the 0.3.0 update is a technical update is that the way saves and visual objects are changed have been drastically changed (if not rewritten). This makes it much easier to maintain visual objects in the long term, especially for bug fixing and general improvements. Although it is still not perfect and has still problematic flaws (such as with user interface interactions), it will make it easier to add new features and visual objects with the minimum of required code.</p>\n<p>During this process, I took the opportunity to improve performances on some visual objects. In particular, Particle flows should run better when a big ammount of particle is simulated. Otherwise, changing some parameters on bar visualizers should create less lag. While the first change may affect the export speed (I have not tested however), the second one only affects the edition phase. In such situation, the user interface will be more responsive as a result.</p>\n<h2 id=\"License\"><a href=\"#License\" class=\"headerlink\" title=\"License\"></a>License</h2><p>The license has been changed from MIT to GPL-3.0-or-later. For more information, see the <a href=\"https://picorims.github.io/wav2bar-blog/public/2022/01/16/devlog-january-2022/\" title=\"Devlog January 2022\">January 2022 devlog</a>.</p>\n<h2 id=\"Fixes\"><a href=\"#Fixes\" class=\"headerlink\" title=\"Fixes\"></a>Fixes</h2><p>This update also fixes numerous issues that appeared in 0.1.x and 0.2.x updates.</p>\n<ul>\n<li><strong>Visual objects</strong><ul>\n<li>Changing the color of a waves visualizer while audio is paused now updates the color visually. Same for particle flows.</li>\n<li>Particle flow’s flow type parameter provides help again.</li>\n</ul>\n</li>\n<li><strong>Command Line Interface</strong><ul>\n<li>Video export via CLI works again.</li>\n</ul>\n</li>\n<li><strong>User interface</strong><ul>\n<li>When opening a new save, existing user interface from old visual objects are now effectively removed.</li>\n<li>Interacting with control panel’s top tabs no longer moves the rest of the user interface.</li>\n<li>The top of the screen was hard to see, and hidden no matter what behind the top user interface (in some zoom and window size scenarios). There is now a minimum of padding above the screen.</li>\n<li>The window no longer flashes to white when being first opened.</li>\n<li>About section no longer have the text centered.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Security\"><a href=\"#Security\" class=\"headerlink\" title=\"Security\"></a>Security</h2><p>Electron has been updated from v12 to v16 and dependencies have been updated as well.</p>\n<h2 id=\"Linux-packages\"><a href=\"#Linux-packages\" class=\"headerlink\" title=\"Linux packages\"></a>Linux packages</h2><p>Wav2Bar is now available for Linux as a .zip file (compiled from Ubuntu). I am still having issues creating .deb and .rpm packages. Thus for the next update I will take a look at .flatpak, with the aim to cover more Linux distributions. If you encounter issues while using Wav2Bar on Linux, you can report bugs directly on the GitHub repository.</p>\n<h2 id=\"0-3-x\"><a href=\"#0-3-x\" class=\"headerlink\" title=\"0.3.x\"></a>0.3.x</h2><p>If any bug is found, it will be addressed in a small update. Otherwise, before going straight into new features, I will make a small update to continue improving the user interface (especially the project tab that is awful) and try to integrate ffmpeg directly into Wav2Bar packages.</p>\n<h2 id=\"Yes-it-took-a-while\"><a href=\"#Yes-it-took-a-while\" class=\"headerlink\" title=\"Yes, it took a while\"></a>Yes, it took a while</h2><p>I know this update took a long time to be released. The refactoring was much deeper than I anticipated. In addition, university work required me to delay the release of this update. I am aware this can be annoying, especially when bugs goes in the way of your workflow. These are the flows that comes with it being a side project…</p>\n<p>Anyways, I hope you will enjoy this update, and I see you for the next one!</p>\n<p>~ Picorims</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Hi!</p>\n<p>Here’s a quick tour around what’s new with Wav2Bar 0.3.0. This update is mostly a technical update preparing the addition of new visual objects, but it also includes many small improvements.</p>\n<p>If you would like to give some inputs about future updates, then you might be interested by <a href=\"https://framaforms.org/wav2bar-feedback-16012022-1642357540\" title=\"Wav2Bar Feedback form\">this form</a>.</p>\n<h2 id=\"Visual-objects\"><a href=\"#Visual-objects\" class=\"headerlink\" title=\"Visual objects\"></a>Visual objects</h2><h3 id=\"Particle-flows\"><a href=\"#Particle-flows\" class=\"headerlink\" title=\"Particle flows\"></a>Particle flows</h3><p>The particle flow visual object received some upgrades. When the audio is not playing, some options will still trigger a visual update, to see how these settings affect the overall look of the particles. Also, if you feel the need to, particle flow containers can now be rotated.</p>\n<h3 id=\"Timers\"><a href=\"#Timers\" class=\"headerlink\" title=\"Timers\"></a>Timers</h3><p>Timers are now positioned differently. When upgrading from an older save, the adjustments will be done automatically.</p>\n<h3 id=\"Background\"><a href=\"#Background\" class=\"headerlink\" title=\"Background\"></a>Background</h3><p>The background visual object has been removed. It was duplicating the visual object for images and shapes while just having less features (like moving or scaling the background for a better fit). When upgrading an old save, all background objects will be converted to image/shape objects, without any visual changes.</p>\n<h3 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h3><p>The default color of objects is now randomized at creation. This makes it less ambiguous when the object is created on another. Before, as all objects were white by default, you wouldn’t notice easily that it was added. Now, unless you just have no luck, colors will be different.</p>\n<img src=\"/wav2bar-blog/public/2022/01/21/beta-0-3-presentation/2022-01-20_beta-0-3_random_color.png\" class=\"\" title=\"Objects with randomized colors\">\n\n<p>Some default values have also been changed for newly created objects.</p>\n<h2 id=\"User-interface\"><a href=\"#User-interface\" class=\"headerlink\" title=\"User interface\"></a>User interface</h2><h3 id=\"Responsiveness\"><a href=\"#Responsiveness\" class=\"headerlink\" title=\"Responsiveness\"></a>Responsiveness</h3><p>Some adjustments have been made to the user interface to make it more responsive in general. When big tasks are happening in the background, a loading screen is now displayed to lock the user interface</p>\n<img src=\"/wav2bar-blog/public/2022/01/21/beta-0-3-presentation/2022-01-20_beta-0-3_loading.png\" class=\"\" title=\"The loading screen indicator\">\n\n<p>Moreover, the audio control panel and the user interface at the top of the screen in general had problematic issues (to the left). It would not react well to small windows. The buttons are now smaller, and the audio group has been split in two to overcome that (to the right).</p>\n<img src=\"/wav2bar-blog/public/2022/01/21/beta-0-3-presentation/2022-01-20_beta-0-3_top_ui.png\" class=\"\" title=\"The user interface at the top is more responsive\">\n\n<p>Finally, the user interface should also be more responsive when resizing the window. </p>\n<h3 id=\"Visual-objects-1\"><a href=\"#Visual-objects-1\" class=\"headerlink\" title=\"Visual objects\"></a>Visual objects</h3><p>Changing an object’s name is now done using a dedicated field in the rack (to the right), instead of going through a modal window (to the left).</p>\n<img src=\"/wav2bar-blog/public/2022/01/21/beta-0-3-presentation/2022-01-20_beta-0-3_rename.png\" class=\"\" title=\"Renaming an object\">\n\n<p>Additionally, irrelevant options (i.e that have no effect) in some objects are no longer available (timers, visualizers). In consequence they are no longer stored as well with these objects. This should remove some confusion on usage.</p>\n<h3 id=\"Other-improvements\"><a href=\"#Other-improvements\" class=\"headerlink\" title=\"Other improvements\"></a>Other improvements</h3><p>The help have been improved and updated, especially for saves and object creation. The logs folder is now directly accessible from the settings tab.</p>\n<h2 id=\"Technical-changes-and-performance-improvements\"><a href=\"#Technical-changes-and-performance-improvements\" class=\"headerlink\" title=\"Technical changes and performance improvements\"></a>Technical changes and performance improvements</h2><p>The main reason the 0.3.0 update is a technical update is that the way saves and visual objects are changed have been drastically changed (if not rewritten). This makes it much easier to maintain visual objects in the long term, especially for bug fixing and general improvements. Although it is still not perfect and has still problematic flaws (such as with user interface interactions), it will make it easier to add new features and visual objects with the minimum of required code.</p>\n<p>During this process, I took the opportunity to improve performances on some visual objects. In particular, Particle flows should run better when a big ammount of particle is simulated. Otherwise, changing some parameters on bar visualizers should create less lag. While the first change may affect the export speed (I have not tested however), the second one only affects the edition phase. In such situation, the user interface will be more responsive as a result.</p>\n<h2 id=\"License\"><a href=\"#License\" class=\"headerlink\" title=\"License\"></a>License</h2><p>The license has been changed from MIT to GPL-3.0-or-later. For more information, see the <a href=\"https://picorims.github.io/wav2bar-blog/public/2022/01/16/devlog-january-2022/\" title=\"Devlog January 2022\">January 2022 devlog</a>.</p>\n<h2 id=\"Fixes\"><a href=\"#Fixes\" class=\"headerlink\" title=\"Fixes\"></a>Fixes</h2><p>This update also fixes numerous issues that appeared in 0.1.x and 0.2.x updates.</p>\n<ul>\n<li><strong>Visual objects</strong><ul>\n<li>Changing the color of a waves visualizer while audio is paused now updates the color visually. Same for particle flows.</li>\n<li>Particle flow’s flow type parameter provides help again.</li>\n</ul>\n</li>\n<li><strong>Command Line Interface</strong><ul>\n<li>Video export via CLI works again.</li>\n</ul>\n</li>\n<li><strong>User interface</strong><ul>\n<li>When opening a new save, existing user interface from old visual objects are now effectively removed.</li>\n<li>Interacting with control panel’s top tabs no longer moves the rest of the user interface.</li>\n<li>The top of the screen was hard to see, and hidden no matter what behind the top user interface (in some zoom and window size scenarios). There is now a minimum of padding above the screen.</li>\n<li>The window no longer flashes to white when being first opened.</li>\n<li>About section no longer have the text centered.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Security\"><a href=\"#Security\" class=\"headerlink\" title=\"Security\"></a>Security</h2><p>Electron has been updated from v12 to v16 and dependencies have been updated as well.</p>\n<h2 id=\"Linux-packages\"><a href=\"#Linux-packages\" class=\"headerlink\" title=\"Linux packages\"></a>Linux packages</h2><p>Wav2Bar is now available for Linux as a .zip file (compiled from Ubuntu). I am still having issues creating .deb and .rpm packages. Thus for the next update I will take a look at .flatpak, with the aim to cover more Linux distributions. If you encounter issues while using Wav2Bar on Linux, you can report bugs directly on the GitHub repository.</p>\n<h2 id=\"0-3-x\"><a href=\"#0-3-x\" class=\"headerlink\" title=\"0.3.x\"></a>0.3.x</h2><p>If any bug is found, it will be addressed in a small update. Otherwise, before going straight into new features, I will make a small update to continue improving the user interface (especially the project tab that is awful) and try to integrate ffmpeg directly into Wav2Bar packages.</p>\n<h2 id=\"Yes-it-took-a-while\"><a href=\"#Yes-it-took-a-while\" class=\"headerlink\" title=\"Yes, it took a while\"></a>Yes, it took a while</h2><p>I know this update took a long time to be released. The refactoring was much deeper than I anticipated. In addition, university work required me to delay the release of this update. I am aware this can be annoying, especially when bugs goes in the way of your workflow. These are the flows that comes with it being a side project…</p>\n<p>Anyways, I hope you will enjoy this update, and I see you for the next one!</p>\n<p>~ Picorims</p>\n"},{"title":"Important notice - February 2022","date":"2022-02-03T15:31:44.000Z","updated":"2022-02-03T15:49:43.882Z","thumbnail":"2022-02-03_important-notice-feb-2022.png","_content":"\nHi!\n\nI make this quick post to let you know that I have to put aside Wav2Bar development from February to April. I may still do small bits of work here and there (preparing Wav2Bar 0.3.1), but right now University requires my full attention. I have quite a lot of work to handle, but also have to prepare the coming months for my personal career, which eats up a good chunk of my free time. Because I am a human and not a robot, my body has limits as well, and I need to rest in the tiny space left each week.\n\nI know that development is very slow, and I know even more how some people are impatient about coming features (like synchronized lyrics which has been requested to me by a user). I am doing my best to keep this project active, while not compromising my physical and mental health.\n\nThank you all for your patience, and if you would like to be more frequently updated, feel free to join the Discord server(invite link to the bottom of this page, on GitHub as well as the main website) and drop a little message; or send me an email (same places).\n\nHave a nice week, and by the way, happy Lunar New Year to those celebrating it!\n\n~ Picorims","source":"_posts/important-notice-february-2022.md","raw":"---\ntitle: Important notice - February 2022\ncategories:\n- news\ndate: 2022-02-03 16:31:44\nupdated:\ntags:\n- news\nthumbnail: 2022-02-03_important-notice-feb-2022.png\n---\n\nHi!\n\nI make this quick post to let you know that I have to put aside Wav2Bar development from February to April. I may still do small bits of work here and there (preparing Wav2Bar 0.3.1), but right now University requires my full attention. I have quite a lot of work to handle, but also have to prepare the coming months for my personal career, which eats up a good chunk of my free time. Because I am a human and not a robot, my body has limits as well, and I need to rest in the tiny space left each week.\n\nI know that development is very slow, and I know even more how some people are impatient about coming features (like synchronized lyrics which has been requested to me by a user). I am doing my best to keep this project active, while not compromising my physical and mental health.\n\nThank you all for your patience, and if you would like to be more frequently updated, feel free to join the Discord server(invite link to the bottom of this page, on GitHub as well as the main website) and drop a little message; or send me an email (same places).\n\nHave a nice week, and by the way, happy Lunar New Year to those celebrating it!\n\n~ Picorims","slug":"important-notice-february-2022","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckz75mz7b0000vgun7i4jhcba","content":"<p>Hi!</p>\n<p>I make this quick post to let you know that I have to put aside Wav2Bar development from February to April. I may still do small bits of work here and there (preparing Wav2Bar 0.3.1), but right now University requires my full attention. I have quite a lot of work to handle, but also have to prepare the coming months for my personal career, which eats up a good chunk of my free time. Because I am a human and not a robot, my body has limits as well, and I need to rest in the tiny space left each week.</p>\n<p>I know that development is very slow, and I know even more how some people are impatient about coming features (like synchronized lyrics which has been requested to me by a user). I am doing my best to keep this project active, while not compromising my physical and mental health.</p>\n<p>Thank you all for your patience, and if you would like to be more frequently updated, feel free to join the Discord server(invite link to the bottom of this page, on GitHub as well as the main website) and drop a little message; or send me an email (same places).</p>\n<p>Have a nice week, and by the way, happy Lunar New Year to those celebrating it!</p>\n<p>~ Picorims</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Hi!</p>\n<p>I make this quick post to let you know that I have to put aside Wav2Bar development from February to April. I may still do small bits of work here and there (preparing Wav2Bar 0.3.1), but right now University requires my full attention. I have quite a lot of work to handle, but also have to prepare the coming months for my personal career, which eats up a good chunk of my free time. Because I am a human and not a robot, my body has limits as well, and I need to rest in the tiny space left each week.</p>\n<p>I know that development is very slow, and I know even more how some people are impatient about coming features (like synchronized lyrics which has been requested to me by a user). I am doing my best to keep this project active, while not compromising my physical and mental health.</p>\n<p>Thank you all for your patience, and if you would like to be more frequently updated, feel free to join the Discord server(invite link to the bottom of this page, on GitHub as well as the main website) and drop a little message; or send me an email (same places).</p>\n<p>Have a nice week, and by the way, happy Lunar New Year to those celebrating it!</p>\n<p>~ Picorims</p>\n"},{"title":"Off my chest - March 2022","date":"2022-03-19T21:39:19.000Z","updated":"2022-03-19T21:42:00.409Z","thumbnail":"2022-01-20_beta-0-3_loading.png","_content":"\nHi.\n\n***If you are impatient, don't have the time, do not bother reading, whatever: go to the TL;DR. But you won't understand why this post exists.***\n\nNow let's get straight to the point. The progress on this project is painfully slow. Every time the motivation is there, something goes in my way and eats up a lot of time. This lead to the situation where I make promises and I never fulfill them. Pressure accumulates, and stress too. My health gets impacted. It is far, oh far from being the main reason, but my point is that it plays a role.\n\nAt the same time, most if not every single feature requires great refactoring, because of the codebase. Such a shitty codebase full of hacks, may I say. An architecture that is nonsense. While I am trying to do my best to update it towards a good architecture, and also better code (DRY principle, less global variables, everything in modules, tests, reconsider what should actually be private in classes, cleaner way to handle DOM events, security, etc.), the facts are there. I lag behind. And at the same time, it is required to move forward.\n\nWhy is it like that? Well this project was started during high school, before attending a computer science degree. So it was built on bad fundations. And seeing it now, it hurts my perfectionism.\n\nIt isn't fun anymore, because I am not really working on audio stuff, or new features, I am trying to clean up what can't be. All the time. It is just refactoring after refactoring, and it looks like it is going nowhere. The best would be to rewrite it from scratch. But for what? Redoing two years of work? To maybe get the same situation? Meanwhile, in fact, many other tools can do the same, often better.\n\nBut wait, there's more. As I already said before, I am dealing with wrist pain. What a great source of frustration. Having the willingness to work on projects, being creative, and then being brought back to reality by pain.\n\nAll of this to say, I donn't know if and how much I will keep working on Wav2Bar. I can't say yes, because of what I said above. I can't say no, because I don't know if and when the motivation to work on it will come. Some of it is still there, refactoring is sometimes satisfying in some way. But if there wasn't any problem, I wouldn't be writing these lines.\n\nHowever, what I know is that I don't want to be bound to one project. I want to work on whatever pleases me when I want to. Because all this effort is on my free time. So it should be some good time, where I enjoy every single bit of it. That is especially important as my free time isn't infinite and quite small.\n\n<br/><br/><br/>\n\nTL;DR: It became very hard to work on Wav2Bar and the future is uncertain.\n\n***Ok, now is the time to talk about you. If you didn't read any of the above, then the most important is probably in this paragraph.*** If it is important for you to own a software being regularly updated, Wav2Bar is **not** the tool for you. If you don't care if updates will ever come, and you are just happy when one of those geos out, whatever it can be; then Wav2Bar is still a nice and functional tool, that can achieve the basics of video editing for music publication.\n\nYou probably are disappointed. I am sorry. I can't keep it that way when it isn't going well, and when the negative outweight the positive. So, I hope you understand me.\n\nI learnt a ton of stuff in the process, and that is to me the most important. The rest is bonus, and I am very grateful for it, especially for the positive feedback I got. Seeing the tool being used is the most rewarding gift.\n\nTake care of yourself and your relatives.\n\n~ Picorims\n\nPS: I will probably update the README and the licence someday to accomodate to this post.","source":"_posts/off-my-chest-march-2022.md","raw":"---\ntitle: Off my chest - March 2022\ncategories:\n- news\ndate: 2022-03-19 22:39:19\nupdated:\ntags:\n- news\nthumbnail: 2022-01-20_beta-0-3_loading.png\n---\n\nHi.\n\n***If you are impatient, don't have the time, do not bother reading, whatever: go to the TL;DR. But you won't understand why this post exists.***\n\nNow let's get straight to the point. The progress on this project is painfully slow. Every time the motivation is there, something goes in my way and eats up a lot of time. This lead to the situation where I make promises and I never fulfill them. Pressure accumulates, and stress too. My health gets impacted. It is far, oh far from being the main reason, but my point is that it plays a role.\n\nAt the same time, most if not every single feature requires great refactoring, because of the codebase. Such a shitty codebase full of hacks, may I say. An architecture that is nonsense. While I am trying to do my best to update it towards a good architecture, and also better code (DRY principle, less global variables, everything in modules, tests, reconsider what should actually be private in classes, cleaner way to handle DOM events, security, etc.), the facts are there. I lag behind. And at the same time, it is required to move forward.\n\nWhy is it like that? Well this project was started during high school, before attending a computer science degree. So it was built on bad fundations. And seeing it now, it hurts my perfectionism.\n\nIt isn't fun anymore, because I am not really working on audio stuff, or new features, I am trying to clean up what can't be. All the time. It is just refactoring after refactoring, and it looks like it is going nowhere. The best would be to rewrite it from scratch. But for what? Redoing two years of work? To maybe get the same situation? Meanwhile, in fact, many other tools can do the same, often better.\n\nBut wait, there's more. As I already said before, I am dealing with wrist pain. What a great source of frustration. Having the willingness to work on projects, being creative, and then being brought back to reality by pain.\n\nAll of this to say, I donn't know if and how much I will keep working on Wav2Bar. I can't say yes, because of what I said above. I can't say no, because I don't know if and when the motivation to work on it will come. Some of it is still there, refactoring is sometimes satisfying in some way. But if there wasn't any problem, I wouldn't be writing these lines.\n\nHowever, what I know is that I don't want to be bound to one project. I want to work on whatever pleases me when I want to. Because all this effort is on my free time. So it should be some good time, where I enjoy every single bit of it. That is especially important as my free time isn't infinite and quite small.\n\n<br/><br/><br/>\n\nTL;DR: It became very hard to work on Wav2Bar and the future is uncertain.\n\n***Ok, now is the time to talk about you. If you didn't read any of the above, then the most important is probably in this paragraph.*** If it is important for you to own a software being regularly updated, Wav2Bar is **not** the tool for you. If you don't care if updates will ever come, and you are just happy when one of those geos out, whatever it can be; then Wav2Bar is still a nice and functional tool, that can achieve the basics of video editing for music publication.\n\nYou probably are disappointed. I am sorry. I can't keep it that way when it isn't going well, and when the negative outweight the positive. So, I hope you understand me.\n\nI learnt a ton of stuff in the process, and that is to me the most important. The rest is bonus, and I am very grateful for it, especially for the positive feedback I got. Seeing the tool being used is the most rewarding gift.\n\nTake care of yourself and your relatives.\n\n~ Picorims\n\nPS: I will probably update the README and the licence someday to accomodate to this post.","slug":"off-my-chest-march-2022","published":1,"_id":"cl0ydfram0000m0un2dr66srs","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Hi.</p>\n<p><strong><em>If you are impatient, don’t have the time, do not bother reading, whatever: go to the TL;DR. But you won’t understand why this post exists.</em></strong></p>\n<p>Now let’s get straight to the point. The progress on this project is painfully slow. Every time the motivation is there, something goes in my way and eats up a lot of time. This lead to the situation where I make promises and I never fulfill them. Pressure accumulates, and stress too. My health gets impacted. It is far, oh far from being the main reason, but my point is that it plays a role.</p>\n<p>At the same time, most if not every single feature requires great refactoring, because of the codebase. Such a shitty codebase full of hacks, may I say. An architecture that is nonsense. While I am trying to do my best to update it towards a good architecture, and also better code (DRY principle, less global variables, everything in modules, tests, reconsider what should actually be private in classes, cleaner way to handle DOM events, security, etc.), the facts are there. I lag behind. And at the same time, it is required to move forward.</p>\n<p>Why is it like that? Well this project was started during high school, before attending a computer science degree. So it was built on bad fundations. And seeing it now, it hurts my perfectionism.</p>\n<p>It isn’t fun anymore, because I am not really working on audio stuff, or new features, I am trying to clean up what can’t be. All the time. It is just refactoring after refactoring, and it looks like it is going nowhere. The best would be to rewrite it from scratch. But for what? Redoing two years of work? To maybe get the same situation? Meanwhile, in fact, many other tools can do the same, often better.</p>\n<p>But wait, there’s more. As I already said before, I am dealing with wrist pain. What a great source of frustration. Having the willingness to work on projects, being creative, and then being brought back to reality by pain.</p>\n<p>All of this to say, I donn’t know if and how much I will keep working on Wav2Bar. I can’t say yes, because of what I said above. I can’t say no, because I don’t know if and when the motivation to work on it will come. Some of it is still there, refactoring is sometimes satisfying in some way. But if there wasn’t any problem, I wouldn’t be writing these lines.</p>\n<p>However, what I know is that I don’t want to be bound to one project. I want to work on whatever pleases me when I want to. Because all this effort is on my free time. So it should be some good time, where I enjoy every single bit of it. That is especially important as my free time isn’t infinite and quite small.</p>\n<p><br/><br/><br/></p>\n<p>TL;DR: It became very hard to work on Wav2Bar and the future is uncertain.</p>\n<p><strong><em>Ok, now is the time to talk about you. If you didn’t read any of the above, then the most important is probably in this paragraph.</em></strong> If it is important for you to own a software being regularly updated, Wav2Bar is <strong>not</strong> the tool for you. If you don’t care if updates will ever come, and you are just happy when one of those geos out, whatever it can be; then Wav2Bar is still a nice and functional tool, that can achieve the basics of video editing for music publication.</p>\n<p>You probably are disappointed. I am sorry. I can’t keep it that way when it isn’t going well, and when the negative outweight the positive. So, I hope you understand me.</p>\n<p>I learnt a ton of stuff in the process, and that is to me the most important. The rest is bonus, and I am very grateful for it, especially for the positive feedback I got. Seeing the tool being used is the most rewarding gift.</p>\n<p>Take care of yourself and your relatives.</p>\n<p>~ Picorims</p>\n<p>PS: I will probably update the README and the licence someday to accomodate to this post.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Hi.</p>\n<p><strong><em>If you are impatient, don’t have the time, do not bother reading, whatever: go to the TL;DR. But you won’t understand why this post exists.</em></strong></p>\n<p>Now let’s get straight to the point. The progress on this project is painfully slow. Every time the motivation is there, something goes in my way and eats up a lot of time. This lead to the situation where I make promises and I never fulfill them. Pressure accumulates, and stress too. My health gets impacted. It is far, oh far from being the main reason, but my point is that it plays a role.</p>\n<p>At the same time, most if not every single feature requires great refactoring, because of the codebase. Such a shitty codebase full of hacks, may I say. An architecture that is nonsense. While I am trying to do my best to update it towards a good architecture, and also better code (DRY principle, less global variables, everything in modules, tests, reconsider what should actually be private in classes, cleaner way to handle DOM events, security, etc.), the facts are there. I lag behind. And at the same time, it is required to move forward.</p>\n<p>Why is it like that? Well this project was started during high school, before attending a computer science degree. So it was built on bad fundations. And seeing it now, it hurts my perfectionism.</p>\n<p>It isn’t fun anymore, because I am not really working on audio stuff, or new features, I am trying to clean up what can’t be. All the time. It is just refactoring after refactoring, and it looks like it is going nowhere. The best would be to rewrite it from scratch. But for what? Redoing two years of work? To maybe get the same situation? Meanwhile, in fact, many other tools can do the same, often better.</p>\n<p>But wait, there’s more. As I already said before, I am dealing with wrist pain. What a great source of frustration. Having the willingness to work on projects, being creative, and then being brought back to reality by pain.</p>\n<p>All of this to say, I donn’t know if and how much I will keep working on Wav2Bar. I can’t say yes, because of what I said above. I can’t say no, because I don’t know if and when the motivation to work on it will come. Some of it is still there, refactoring is sometimes satisfying in some way. But if there wasn’t any problem, I wouldn’t be writing these lines.</p>\n<p>However, what I know is that I don’t want to be bound to one project. I want to work on whatever pleases me when I want to. Because all this effort is on my free time. So it should be some good time, where I enjoy every single bit of it. That is especially important as my free time isn’t infinite and quite small.</p>\n<p><br/><br/><br/></p>\n<p>TL;DR: It became very hard to work on Wav2Bar and the future is uncertain.</p>\n<p><strong><em>Ok, now is the time to talk about you. If you didn’t read any of the above, then the most important is probably in this paragraph.</em></strong> If it is important for you to own a software being regularly updated, Wav2Bar is <strong>not</strong> the tool for you. If you don’t care if updates will ever come, and you are just happy when one of those geos out, whatever it can be; then Wav2Bar is still a nice and functional tool, that can achieve the basics of video editing for music publication.</p>\n<p>You probably are disappointed. I am sorry. I can’t keep it that way when it isn’t going well, and when the negative outweight the positive. So, I hope you understand me.</p>\n<p>I learnt a ton of stuff in the process, and that is to me the most important. The rest is bonus, and I am very grateful for it, especially for the positive feedback I got. Seeing the tool being used is the most rewarding gift.</p>\n<p>Take care of yourself and your relatives.</p>\n<p>~ Picorims</p>\n<p>PS: I will probably update the README and the licence someday to accomodate to this post.</p>\n"}],"PostAsset":[{"_id":"source/_posts/beta-0-2-presentation/2021-07-21-155400-wav2bar-0-2-0-beta.png","slug":"2021-07-21-155400-wav2bar-0-2-0-beta.png","post":"cku0bbxd10000vsun1w2v0s8l","modified":0,"renderable":0},{"_id":"source/_posts/beta-0-2-presentation/2021-07-21-162137-beta-0-2-glow-example.png","slug":"2021-07-21-162137-beta-0-2-glow-example.png","post":"cku0bbxd10000vsun1w2v0s8l","modified":0,"renderable":0},{"_id":"source/_posts/beta-0-2-presentation/2021-07-21-w2b-0-2-beta-color-picker.png","slug":"2021-07-21-w2b-0-2-beta-color-picker.png","post":"cku0bbxd10000vsun1w2v0s8l","modified":0,"renderable":0},{"_id":"source/_posts/beta-0-2-presentation/2021-07-21-wav2bar-0-2-beta-before-after.png","slug":"2021-07-21-wav2bar-0-2-beta-before-after.png","post":"cku0bbxd10000vsun1w2v0s8l","modified":0,"renderable":0},{"_id":"source/_posts/first-post/main_background.png","slug":"main_background.png","post":"cku0bbxd50001vsunhcoke0eq","modified":0,"renderable":0},{"_id":"source/_posts/beta-0-1-and-general-update/thumbnail_wav2bar_showcase.jpg","slug":"thumbnail_wav2bar_showcase.jpg","post":"cku0bbxd70004vsun2hxt5gzw","modified":0,"renderable":0},{"_id":"source/_posts/devlog-september-2021/thumbnail-devlog-september-2021.png","slug":"thumbnail-devlog-september-2021.png","post":"cku0bbxdf000rvsun649d91lt","modified":0,"renderable":0},{"_id":"source/_posts/devlog-january-2022/thumbnail-devlog-january-2022.png","slug":"thumbnail-devlog-january-2022.png","post":"ckyhp61pe0000csun90qxhkl1","modified":0,"renderable":0},{"_id":"source/_posts/beta-0-3-presentation/2022-01-20_beta-0-3.png","slug":"2022-01-20_beta-0-3.png","post":"ckyni0mgj0000rwun2hog92yf","modified":0,"renderable":0},{"_id":"source/_posts/beta-0-3-presentation/2022-01-20_beta-0-3_loading.png","slug":"2022-01-20_beta-0-3_loading.png","post":"ckyni0mgj0000rwun2hog92yf","modified":0,"renderable":0},{"_id":"source/_posts/beta-0-3-presentation/2022-01-20_beta-0-3_random_color.png","slug":"2022-01-20_beta-0-3_random_color.png","post":"ckyni0mgj0000rwun2hog92yf","modified":0,"renderable":0},{"_id":"source/_posts/beta-0-3-presentation/2022-01-20_beta-0-3_rename.png","slug":"2022-01-20_beta-0-3_rename.png","post":"ckyni0mgj0000rwun2hog92yf","modified":0,"renderable":0},{"_id":"source/_posts/beta-0-3-presentation/2022-01-20_beta-0-3_top_ui.png","slug":"2022-01-20_beta-0-3_top_ui.png","post":"ckyni0mgj0000rwun2hog92yf","modified":0,"renderable":0},{"_id":"source/_posts/important-notice-february-2022/2022-02-03_important-notice-feb-2022.png","slug":"2022-02-03_important-notice-feb-2022.png","post":"ckz75mz7b0000vgun7i4jhcba","modified":0,"renderable":0},{"_id":"source/_posts/off-my-chest-march-2022/2022-01-20_beta-0-3_loading.png","slug":"2022-01-20_beta-0-3_loading.png","post":"cl0ydfram0000m0un2dr66srs","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cku0bbxd50001vsunhcoke0eq","category_id":"cku0bbxd60002vsune100gbuj","_id":"cku0bbxdb000avsunbxgkes22"},{"post_id":"cku0bbxd10000vsun1w2v0s8l","category_id":"cku0bbxd60002vsune100gbuj","_id":"cku0bbxdd000hvsun6wwt6y36"},{"post_id":"cku0bbxd10000vsun1w2v0s8l","category_id":"cku0bbxdb0009vsun69nv6lju","_id":"cku0bbxdd000kvsundku232vv"},{"post_id":"cku0bbxd70004vsun2hxt5gzw","category_id":"cku0bbxd60002vsune100gbuj","_id":"cku0bbxde000lvsun2guydopt"},{"post_id":"cku0bbxd70004vsun2hxt5gzw","category_id":"cku0bbxdb0009vsun69nv6lju","_id":"cku0bbxde000nvsunggh1fwib"},{"post_id":"cku0bbxdf000rvsun649d91lt","category_id":"cku0bbxd60002vsune100gbuj","_id":"cku0bbxdh000wvsun7qx0ffpb"},{"post_id":"cku0bbxdf000rvsun649d91lt","category_id":"cku0bbxdg000tvsun5ilxcb3i","_id":"cku0bbxdh000yvsunghaofm3u"},{"post_id":"ckyhp61pe0000csun90qxhkl1","category_id":"cku0bbxd60002vsune100gbuj","_id":"ckyhp61pj0003csun6khn8wcs"},{"post_id":"ckyhp61pe0000csun90qxhkl1","category_id":"cku0bbxdg000tvsun5ilxcb3i","_id":"ckyhp61pj0005csunh5zr88tq"},{"post_id":"ckyni0mgj0000rwun2hog92yf","category_id":"cku0bbxd60002vsune100gbuj","_id":"ckyni0mgn0003rwun0xbo0rjj"},{"post_id":"ckyni0mgj0000rwun2hog92yf","category_id":"cku0bbxdb0009vsun69nv6lju","_id":"ckyni0mgn0005rwunb4s7aqa2"},{"post_id":"ckz75mz7b0000vgun7i4jhcba","category_id":"cku0bbxd60002vsune100gbuj","_id":"ckz75mz7d0002vgunhtbeatu8"},{"post_id":"cl0ydfram0000m0un2dr66srs","category_id":"cku0bbxd60002vsune100gbuj","_id":"cl0ydfraq0002m0unfdd60wjm"}],"PostTag":[{"post_id":"cku0bbxd10000vsun1w2v0s8l","tag_id":"cku0bbxd70003vsuncr5nfz2v","_id":"cku0bbxdc000cvsunbluf7khi"},{"post_id":"cku0bbxd10000vsun1w2v0s8l","tag_id":"cku0bbxd90006vsun6qks33bw","_id":"cku0bbxdc000evsungtnpa49y"},{"post_id":"cku0bbxd10000vsun1w2v0s8l","tag_id":"cku0bbxdb0008vsun2b0qe0rs","_id":"cku0bbxdd000gvsunhwih5lux"},{"post_id":"cku0bbxd50001vsunhcoke0eq","tag_id":"cku0bbxd70003vsuncr5nfz2v","_id":"cku0bbxdd000ivsundk6f19vd"},{"post_id":"cku0bbxd70004vsun2hxt5gzw","tag_id":"cku0bbxd70003vsuncr5nfz2v","_id":"cku0bbxde000ovsun67pmcba3"},{"post_id":"cku0bbxd70004vsun2hxt5gzw","tag_id":"cku0bbxd90006vsun6qks33bw","_id":"cku0bbxde000pvsunecm8770d"},{"post_id":"cku0bbxd70004vsun2hxt5gzw","tag_id":"cku0bbxdb0008vsun2b0qe0rs","_id":"cku0bbxde000qvsun04l67wra"},{"post_id":"cku0bbxdf000rvsun649d91lt","tag_id":"cku0bbxd70003vsuncr5nfz2v","_id":"cku0bbxdh000uvsunaops7n40"},{"post_id":"cku0bbxdf000rvsun649d91lt","tag_id":"cku0bbxd90006vsun6qks33bw","_id":"cku0bbxdh000vvsuncwhl0peh"},{"post_id":"cku0bbxdf000rvsun649d91lt","tag_id":"cku0bbxdg000svsun0fjnfjn5","_id":"cku0bbxdh000xvsunebhh5cuf"},{"post_id":"ckyhp61pe0000csun90qxhkl1","tag_id":"cku0bbxd70003vsuncr5nfz2v","_id":"ckyhp61pj0001csun0oz07ddf"},{"post_id":"ckyhp61pe0000csun90qxhkl1","tag_id":"cku0bbxd90006vsun6qks33bw","_id":"ckyhp61pj0002csun4cxl57fi"},{"post_id":"ckyhp61pe0000csun90qxhkl1","tag_id":"cku0bbxdg000svsun0fjnfjn5","_id":"ckyhp61pj0004csun5di63oyk"},{"post_id":"ckyni0mgj0000rwun2hog92yf","tag_id":"cku0bbxd70003vsuncr5nfz2v","_id":"ckyni0mgn0001rwun81dchnsl"},{"post_id":"ckyni0mgj0000rwun2hog92yf","tag_id":"cku0bbxd90006vsun6qks33bw","_id":"ckyni0mgn0002rwun1v4f7i28"},{"post_id":"ckyni0mgj0000rwun2hog92yf","tag_id":"cku0bbxdb0008vsun2b0qe0rs","_id":"ckyni0mgn0004rwun00tn9a3r"},{"post_id":"ckz75mz7b0000vgun7i4jhcba","tag_id":"cku0bbxd70003vsuncr5nfz2v","_id":"ckz75mz7d0001vgunfens1nj2"},{"post_id":"cl0ydfram0000m0un2dr66srs","tag_id":"cku0bbxd70003vsuncr5nfz2v","_id":"cl0ydfraq0001m0un66j227ct"}],"Tag":[{"name":"news","_id":"cku0bbxd70003vsuncr5nfz2v"},{"name":"beta","_id":"cku0bbxd90006vsun6qks33bw"},{"name":"release","_id":"cku0bbxdb0008vsun2b0qe0rs"},{"name":"devlog","_id":"cku0bbxdg000svsun0fjnfjn5"}]}}